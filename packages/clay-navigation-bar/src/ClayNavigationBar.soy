{namespace ClayNavigationBar}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param items: list<[
		active: bool,
		href: string,
		label: string
	]>}
	{@param spritemap: string}
	{@param? elementClasses: string}
	{@param? handleClickToggler_: any}
	{@param? id: string}
	{@param? inverted: bool}
	{@param? isTransitioning_: bool}
	{@param? visible_: bool}

	{let $attributes kind="attributes"}
		class="navbar navbar-collapse-absolute navbar-expand-md navbar-underline navigation-bar
			{if $inverted}
				{sp}navigation-bar-secondary
			{else}
				{sp}navigation-bar-light
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$attributes}>
		<div class="container">
			{if $items}
				{call .toggler}
					{param handleClickToggler_: $handleClickToggler_ /}
					{param items: $items /}
					{param spritemap: $spritemap /}
					{param visible_: $visible_ /}
				{/call}
			{/if}
			{call .content}
				{param isTransitioning_: $isTransitioning_ /}
				{param items: $items /}
				{param spritemap: $spritemap /}
				{param visible_: $visible_ /}
			{/call}
		</div>
	</nav>
{/template}

/**
 * This renders a navbar content.
 */
{template .content}
	{@param items: list<[
		active: bool,
		href: string,
		label: string
	]>}
	{@param spritemap: string}
	{@param? isTransitioning_: bool}
	{@param? visible_: bool}

	{let $classes kind="text"}
		navbar-collapse

		{if $isTransitioning_}
			{sp}collapsing
		{else}
			{sp}collapse
		{/if}

		{if $visible_}
			{sp}show
		{/if}
	{/let}

	<div class="{$classes}">
		<div class="container">
			{if $items}
				{call .navmenu}
					{param items: $items /}
					{param spritemap: $spritemap /}
				{/call}
			{/if}
		</div>
	</div>
{/template}

/**
 * This renders a navbar item.
 */
{template .navitem}
	{@param href: string}
	{@param label: string}
	{@param? active: bool}

	<li class="nav-item">
		{call ClayLink.render}
			{param ariaLabel kind="text"}
				{if $active}
					Current Page
				{/if}
			{/param}

			{param elementClasses kind="text"}
				nav-link
				{if $active}
					{sp}active
				{/if}
			{/param}

			{param href: $href /}
			{param label kind="html"}
				<span class="navbar-text-truncate">{$label}</span>
			{/param}

		{/call}
	</li>
{/template}

/**
 * This renders list of items.
 */
{template .navmenu}
	{@param items: list<[
		active: bool,
		href: string,
		label: string
	]>}

	<ul class="navbar-nav">
		{foreach $page in $items}
			{call .navitem}
				{param active: $page.active /}
				{param href: $page.href /}
				{param label: $page.label /}
			{/call}
		{/foreach}
	</ul>
{/template}

/**
 * This makes a toggler when viewing on the mobile.
 */
{template .toggler}
	{@param items: list<[
		active: bool,
		href: string,
		label: string
	]>}
	{@param spritemap: string}
	{@param? handleClickToggler_: any}
	{@param? visible_: bool}

	{let $classes kind="text"}
		navbar-toggler navbar-toggler-link
		{if not $visible_}
			{sp}collapsed
		{/if}
	{/let}

	{call ClayLink.render}
		{param ariaExpanded: $visible_ /}
		{param ariaLabel: 'Toggle Navigation' /}
		{param elementClasses: $classes /}
		{param events: ['click': $handleClickToggler_] /}
		{param href: '#' /}
		{param icon: 'caret-bottom' /}
		{param iconAlignment: 'right' /}
		{param label kind="text"}
			{foreach $item in $items}
				{if $item.active == true}
					{$item.label}
				{/if}
			{/foreach}
		{/param}

		{param spritemap: $spritemap /}
	{/call}
{/template}
