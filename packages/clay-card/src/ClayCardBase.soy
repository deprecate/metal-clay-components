{namespace ClayCardBase}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? actionItems: list<[
		label: string,
		separator: bool,
		url: string
	]>}
  {@param? disabled: bool}
	{@param? elementClasses: string}
	{@param? icon: string}
	{@param? id: string}
  {@param? inputName: string}
  {@param? inputValue: string}
	{@param? imageAlt: string}
	{@param? imageSrc: string}
	{@param? label: string}
	{@param? labelStyle: string}
  {@param? selectable: bool}
  {@param? selected: bool}
	{@param? subtitle: string}
	{@param? title: string}
	{@param? type: string}
	{@param? typeStyle: string}
	{@param? url: string}
	{@param? variant: string}


	{let $attributes kind="attributes"}
		class="card-type-asset
			{if $selectable}
				{sp}form-check form-check-card form-check-top-left
			{else}
				{sp}card
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	{let $header kind="html"}
		{delcall ClayCardBase.VisualArea variant="$variant"}
			{param icon: $icon /}
			{param imageAlt: $imageAlt /}
			{param imageSrc: $imageSrc /}
			{param spritemap: $spritemap /}
			{param type: $type /}
			{param typeStyle: $typeStyle /}
		{/delcall}
	{/let}

	{let $body kind="html"}
		{delcall ClayCardBase.DescriptiveArea variant="$variant"}
			{param actionItems: $actionItems /}
			{param label: $label /}
			{param labelStyle: $labelStyle /}
			{param spritemap: $spritemap /}
			{param subtitle: $subtitle /}
			{param title: $title /}
			{param url: $url /}
		{/delcall}
	{/let}

	<div {$attributes}>
		{if $selectable}
			{call ClayCheckbox.render}
				{param checked: $selected /}
				{param disabled: $disabled /}
				{param labelContent kind="html"}
					{let $classesCard kind="text"}
						card card-type-asset
					{/let}

					<div class="{$classesCard}">
						{$header}
						{$body}
					</div>
				{/param}

				{param name: $inputName /}
				{param value: $inputValue /}
			{/call}
		{else}
			{$header}
			{$body}
		{/if}
	</div>
{/template}

/**
 * This renders the information area of the card.
 */
{deltemplate ClayCardBase.DescriptiveArea}
	{@param spritemap: string}
	{@param? actionItems: list<[
		label: string,
		separator: bool,
		url: string
	]>}
	{@param? label: string}
	{@param? labelStyle: string}
	{@param? subtitle: string}
	{@param? title: string}
	{@param? url: string}

	<div class="card-body">
		<div class="card-row">
			<div class="flex-col flex-col-expand">
				{if $url}
					{call ClayLink.render}
						{param elementClasses: 'card-title text-truncate' /}
						{param href: $url /}
						{param label: $title /}
					{/call}
				{elseif $title}
					<div class="card-title text-truncate" title="{$title}">{$title}</div>
				{/if}

				{if $subtitle}
					<div class="card-subtitle text-truncate" title="{$subtitle}">{$subtitle}</div>
				{/if}

				{if $label and $labelStyle}
					<div class="card-detail">
						{call ClayLabel.render}
							{param label: $label /}
							{param style: $labelStyle /}
						{/call}
					</div>
				{/if}
			</div>

			{if $actionItems}
				<div class="flex-col">
					{call ClayActionsDropdown.render}
						{param items: $actionItems /}
						{param spritemap: $spritemap /}
					{/call}
				</div>
			{/if}
		</div>
	</div>
{/deltemplate}

/**
 * This renders the visual area of the card
 */
{deltemplate ClayCardBase.VisualArea}
	{@param spritemap: string}
	{@param? icon: string}
	{@param? imageAlt: string}
	{@param? imageSrc: string}
	{@param? type: string}
	{@param? typeStyle: string}
{/deltemplate}