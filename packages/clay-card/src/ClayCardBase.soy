{namespace ClayCardBase}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? actionsItems: list<[
		label: string,
		separator: bool,
		url: string
	]>}
	{@param? checkbox: [
		checked: bool,
		disabled: bool,
		indeterminate: bool,
		name: string,
		value: string
	]}
	{@param? elementClasses: string}
	{@param? icon: string}
	{@param? id: string}
	{@param? imageAlt: string}
	{@param? imageSrc: string}
	{@param? label: string}
	{@param? labelStyle: string}
	{@param? subtitle: string}
	{@param? title: string}
	{@param? type: string}
	{@param? typeStyle: string}
	{@param? url: string}
	{@param? variant: string}

	{let $attributes kind="attributes"}
		class="
			{if $checkbox}
				form-check form-check-card

				{if $variant == 'folder'}
					{sp}form-check-middle-left
				{else}
					{sp}form-check-top-left
				{/if}
			{else}
				card
			{/if}

			{if $variant == 'folder'}
				{sp}card-type-directory

				{if not $checkbox}
					{sp}card-horizontal
				{/if}
			{else}
				{sp}card-type-asset
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	{let $header kind="html"}
		{if $variant != 'folder'}
			{call .header}
				{param icon: $icon /}
				{param imageAlt: $imageAlt /}
				{param imageSrc: $imageSrc /}
				{param spritemap: $spritemap /}
				{param type: $type /}
				{param typeStyle: $typeStyle /}
				{param variant: $variant /}
			{/call}
		{/if}
	{/let}

	{let $body kind="html"}
		{call .body}
			{param actionsItems: $actionsItems /}
			{param label: $label /}
			{param labelStyle: $labelStyle /}
			{param spritemap: $spritemap /}
			{param subtitle: $subtitle /}
			{param title: $title /}
			{param url: $url /}
			{param variant: $variant /}
		{/call}
	{/let}

	<div {$attributes}>
		{if $checkbox}
			{call ClayCheckbox.render}
				{param checked: $checkbox.checked /}
				{param disabled: $checkbox.disabled /}
				{param indeterminate: $checkbox.indeterminate /}
				{param labelContent kind="html"}
					{let $classesCard kind="text"}
						card
						{if $variant == 'folder'}
							{sp}card-horizontal
						{else}
							{sp}card-type-asset
						{/if}
					{/let}

					<div class="{$classesCard}">
						{$header}
						{$body}
					</div>
				{/param}

				{param name: $checkbox.name /}
				{param value: $checkbox.value /}
			{/call}
		{else}
			{$header}
			{$body}
		{/if}
	</div>
{/template}


/**
 * The content the element.
 */
{template .body}
	{@param spritemap: string}
	{@param? actionsItems: list<[
		label: string,
		separator: bool,
		url: string
	]>}
	{@param? label: string}
	{@param? labelStyle: string}
	{@param? subtitle: string}
	{@param? title: string}
	{@param? url: string}
	{@param? variant: string}

	<div class="card-body">
		<div class="card-row">
			{let $classesDescription kind="text"}
				flex-col flex-col-expand
				{if $variant == 'folder'}
					{sp}flex-col-gutters
				{/if}
			{/let}

			{if $variant == 'folder'}
				{call ClaySticker.render}
					{param icon: 'folder' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
				{/call}
			{/if}

			<div class="{$classesDescription}">
				{if $url}
					{call ClayLink.render}
						{param elementClasses: 'card-title text-truncate' /}
						{param href: $url /}
						{param label: $title /}
					{/call}
				{elseif $title}
					<div class="card-title text-truncate" title="{$title}">{$title}</div>
				{/if}

				{if $subtitle and $variant != 'folder'}
					<div class="card-subtitle text-truncate" title="{$subtitle}">{$subtitle}</div>
				{/if}

				{if $label and $labelStyle and $variant != 'folder'}
					<div class="card-detail">
						{call ClayLabel.render}
							{param label: $label /}
							{param style: $labelStyle /}
						{/call}
					</div>
				{/if}
			</div>

			{if $actionsItems}
				<div class="flex-col">
					{call ClayActionsDropdown.render}
						{param items: $actionsItems /}
						{param spritemap: $spritemap /}
					{/call}
				</div>
			{/if}
		</div>
	</div>
{/template}

/**
 * Render the header of card.
 */
{template .header}
	{@param spritemap: string}
	{@param? icon: string}
	{@param? imageAlt: string}
	{@param? imageSrc: string}
	{@param? type: string}
	{@param? typeStyle: string}
	{@param? variant: string}

	{let $stickerStyle: $typeStyle ?: 'primary' /}

	{let $classes kind="text"}
		aspect-ratio card-item-first
		{if $variant == 'image'}
			{sp}bg-checkered
		{/if}
	{/let}

	{let $classesAspectRatio kind="text"}
		aspect-ratio-item-center-middle aspect-ratio-item-fluid
	{/let}

	<div class="{$classes}">
		{if $imageSrc and $variant == 'image' or $imageAlt and $variant == 'image'}
			<img alt="{$imageAlt}" class="{$classesAspectRatio}" src="{$imageSrc}"/>
		{elseif $icon and $spritemap}
			<div class="{$classesAspectRatio}">
				{call ClayIcon.render}
					{param spritemap: $spritemap /}
					{param symbol: $icon /}
				{/call}
			</div>
		{/if}

		{if $variant == 'user'}
			<div class="{$classesAspectRatio}">
				{call ClaySticker.render}
					{param label kind="html"}
						{if $imageSrc}
							<img alt="{$imageAlt}" class="img-fluid" src="{$imageSrc}">
						{elseif $type}
							{$type}
						{/if}
					{/param}

					{param shape: 'circle' /}
					{param size: 'xl' /}
					{param style: $stickerStyle /}
				{/call}
			</div>
		{elseif $type}
			{call ClaySticker.render}
				{param label: $type /}
				{param position: 'bottom-left' /}
				{param style: $stickerStyle /}
			{/call}
		{/if}
	</div>
{/template}
