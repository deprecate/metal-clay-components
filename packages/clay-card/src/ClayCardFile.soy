{namespace ClayCardFile}

{template .render}
    {@param spritemap: string}
    {@param? actionItems: list<[
        label: string,
        separator: bool,
        url: string
    ]>}
    {@param? disabled: bool}
    {@param? elementClasses: string}
    {@param? icon: string}
    {@param? id: string}
    {@param? inputName: string}
    {@param? inputValue: string}
    {@param? label: string}
	{@param? labelStyle: string}
    {@param? selectable: bool}
    {@param? selected: bool}
    {@param? subtitle: string}
    {@param? title: string}
    {@param? type: string}
	{@param? typeStyle: string}
    {@param? url: string}

    {call ClayCardBase.render}
        {param actionItems: $actionItems /}
        {param disabled: $disabled /}
        {param elementClasses: $elementClasses /}
        {param icon: $icon ?: 'documents-and-media' /}
        {param id: $id /}
        {param inputName: $inputName /}
        {param inputValue: $inputValue /}
        {param label: $label /}
        {param labelStyle: $labelStyle /}
        {param ref: 'cardFile' /}
        {param selectable: $selectable /}
        {param selected: $selected /}
        {param spritemap: $spritemap /}
        {param subtitle: $subtitle /}
        {param title: $title /}
        {param type: $type /}
        {param typeStyle: $typeStyle /}
        {param url: $url /}
        {param variant: 'file' /}
    {/call}
{/template}

/**
 * Render the visual area of the card.
 */
{deltemplate ClayCardBase.VisualArea variant="'file'"}
	{@param? icon: string}
	{@param? imageAlt: string}
	{@param? imageSrc: string}
	{@param? spritemap: string}
	{@param? type: string}
	{@param? typeStyle: string}
	{@param? variant: string}

	<div class="aspect-ratio card-item-first">
		{if $icon and $spritemap}
			<div class="aspect-ratio-item-center-middle aspect-ratio-item-fluid">
				{call ClayIcon.render}
					{param spritemap: $spritemap /}
					{param symbol: $icon /}
				{/call}
			</div>
		{/if}

		{if $type}
			{call ClaySticker.render}
				{param label: $type /}
				{param position: 'bottom-left' /}
				{param style: $typeStyle ?: 'primary' /}
			{/call}
		{/if}
	</div>
{/deltemplate}