.label {
	border-color: $label-border-color;
	border-radius: $label-border-radius;
	border-style: $label-border-style;
	border-width: $label-border-width;
	color: $label-color;
	display: inline-block;
	font-size: $label-font-size;
	font-weight: $label-font-weight;
	margin-bottom: 2px;
	margin-top: 2px;
	max-width: 100%;
	padding: $label-padding-y $label-padding-x;
	text-transform: $label-text-transform;
	white-space: normal;
	word-wrap: break-word;

	@if ($enable-mobile-desktop-sizes) {
		@include media-breakpoint-up($mobile-desktop-breakpoint) {
			@if (variable-exists(label-font-size-desktop)) {
				font-size: $label-font-size-desktop;
			}
		}
	}

	a {
		color: $label-color;
		display: inline-block;
		text-decoration: $label-link-text-decoration;

		@include hover-focus {
			color: $label-link-hover-color;
			text-decoration: $label-link-hover-text-decoration;
		}
	}
}

a.label {
	text-decoration: none;
}

.label-lg {
	font-size: $label-font-size-lg;
	padding: $label-padding-y-lg $label-padding-x-lg;

	@if ($enable-mobile-desktop-sizes) {
		@include media-breakpoint-up($mobile-desktop-breakpoint) {
			@if (variable-exists(label-font-size-lg-desktop)) {
				font-size: $label-font-size-lg-desktop;
			}
		}
	}
}

.label-sm {
	font-size: $label-font-size-sm;
	padding: $label-padding-y-sm $label-padding-x-sm;

	@if ($enable-mobile-desktop-sizes) {
		@include media-breakpoint-up($mobile-desktop-breakpoint) {
			@if (variable-exists(label-font-size-sm-desktop)) {
				font-size: $label-font-size-sm-desktop;
			}
		}
	}
}

// Lexicon Icons in Labels

.label .lexicon-icon {
	height: $label-lexicon-icon-height;
	margin-left: 2px;
	width: $label-lexicon-icon-width;
}

.label-lg .lexicon-icon {
	height: $label-lexicon-icon-height-lg;
	margin-left: 4px;
	width: $label-lexicon-icon-width-lg;
}

.label-sm .lexicon-icon {
	height: $label-lexicon-icon-height-sm;
	width: $label-lexicon-icon-width-sm;
}

// Label Variants

@each $color, $value in $label-palette {
	.label-#{$color} {
		background-color: nth($value, 1);
		border-color: nth($value, 3);
		color: nth($value, 5);

		&[href] {
			@include hover-focus {
				background-color: nth($value, 2);
				border-color: nth($value, 4);
				color: nth($value, 6);
			}
		}

		a {
			color: nth($value, 7);

			@include hover-focus {
				color: nth($value, 8);
			}
		}
	}
}