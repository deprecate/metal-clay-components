// @mixin list-group-item-stacked($screen-size-down: xl) {
// 	@if (type-of($screen-size-down) != number) {
// 		@include media-breakpoint-down($screen-size-down) {
// 			flex-direction: column;
// 			padding-bottom: $list-group-item-padding-y / 2;
// 			padding-top: $list-group-item-padding-y / 2;

// 			.flex-col {
// 				padding-bottom: $list-group-item-padding-y / 2;
// 				padding-top: $list-group-item-padding-y / 2;
// 			}
// 		}
// 	}
// 	@else {
// 		@media (max-width: $screen-size-down) {
// 			flex-direction: column;
// 			padding-bottom: $list-group-item-padding-y / 2;
// 			padding-top: $list-group-item-padding-y / 2;

// 			.flex-col {
// 				padding-bottom: $list-group-item-padding-y / 2;
// 				padding-top: $list-group-item-padding-y / 2;
// 			}
// 		}
// 	}
// }

// .list-group-stacked .list-group-item-flex,
// .list-group-item-flex-stacked {
// 	@include list-group-item-stacked(319px);
// }

.list-group {
	@include box-shadow($list-group-box-shadow);
	// Will be safe to remove once https://github.com/twbs/bootstrap/pull/22874 goes in
	color: $list-group-color;

	// Nested list groups shouldn't have box shadows

	.list-group {
		@if ($list-group-box-shadow != null) {
			@include box-shadow(none);
		}
	}
}

.list-group-bordered {
	.list-group-item-flex {
		padding: 0;

		&.active {
			.flex-col {
				border-color: $list-group-active-border-color;
			}
		}
	}

	.flex-col {
		border-left: $list-group-border-width solid $list-group-border-color;
		border-right: $list-group-border-width solid $list-group-border-color;
		margin-left: -$list-group-border-width;
		padding: $list-group-item-padding-y $list-group-item-padding-x;

		&:first-child,
		&:last-child {
			border-left-width: 0;
			border-right-width: 0;
			margin-left: 0;
		}
	}
}

.list-group-item {
	&.active {
		z-index: auto;

		+ .list-group-item {
			border-top-color: $list-group-active-border-color;
		}

		.list-group-link {
			color: $list-group-link-active-color;
		}
	}
}

.list-group-item-danger.active + .list-group-item {
	border-top-color: $state-danger-text;
}

.list-group-item-info.active + .list-group-item {
	border-top-color: $state-info-text;
}

.list-group-item-success.active + .list-group-item {
	border-top-color: $state-success-text;
}

.list-group-item-warning.active + .list-group-item {
	border-top-color: $state-warning-text;
}

.list-group-item-flex {
	// Center content here by adding justify-content: center on .flex-col and .flex-col-expand
	display: flex;
	padding-left: $list-group-item-padding-x / 2;
	padding-right: $list-group-item-padding-x / 2;

	.flex-col {
		padding-left: $list-group-item-padding-x / 2;
		padding-right: $list-group-item-padding-x / 2;
	}
}

.list-group-item-action:focus {
	z-index: 1;
}

.list-group-item {
	.dropdown.show .dropdown-toggle {
		color: $list-group-dropdown-toggle-active-color;
	}

	.dropdown-toggle {
		color: $list-group-dropdown-toggle-color;

		@include hover-focus {
			color: $list-group-dropdown-toggle-hover-color;
		}
	}
}

.list-group-link {
	color: $list-group-link-color;

	@include hover-focus {
		color: $list-group-link-hover-color;
	}
}

// List Group Unstyled

.list-group-unstyled {
	@include box-shadow(none);
	color: inherit;

	.flex-col {
		padding-left: 0;
		padding-right: 0;
	}

	.list-group-item {
		background-color: transparent;
		border-color: transparent;
		padding-left: 0;
		padding-right: 0;

		&.active {
			color: $body-color;

			+ .list-group-item {
				border-top-color: transparent;
			}

			.list-group-link {
				color: $link-color;
			}
		}
	}

	@if ($list-group-link-color) {
		.list-group-link {
			color: $link-color;

			@include hover-focus {
				color: $link-hover-color;
			}
		}
	}
}