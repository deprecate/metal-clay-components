.btn {
	font-size: $btn-font-size;

	@include scale-component {
		font-size: $btn-font-size-mobile;
		padding-bottom: $input-btn-padding-y-mobile;
		padding-left: $input-btn-padding-x-mobile;
		padding-right: $input-btn-padding-x-mobile;
		padding-top: $input-btn-padding-y-mobile;
	}
}

.btn-lg {
	font-size: $btn-font-size-lg;

	@include scale-component {
		font-size: $btn-font-size-lg-mobile;
		padding-bottom: $input-btn-padding-y-lg-mobile;
		padding-left: $input-btn-padding-x-lg-mobile;
		padding-right: $input-btn-padding-x-lg-mobile;
		padding-top: $input-btn-padding-y-lg-mobile;
	}
}

.btn-sm {
	font-size: $btn-font-size-sm;

	@include scale-component {
		font-size: $btn-font-size-sm-mobile;
		padding-bottom: $input-btn-padding-y-sm-mobile;
		padding-left: $input-btn-padding-x-sm-mobile;
		padding-right: $input-btn-padding-x-sm-mobile;
		padding-top: $input-btn-padding-y-sm-mobile;
	}
}

.btn[disabled],
.btn.disabled,
fieldset[disabled] .btn {
	opacity: $btn-disabled-opacity;
}

// Button Monospaced

.btn-monospaced {
	@include monospace($btn-monospaced-size);

	overflow: hidden;
	padding: 0;
	white-space: normal;
	word-wrap: break-word;

	@include scale-component {
		@include monospace($btn-monospaced-size-mobile);
	}

	&.btn-xl {
		@include monospace($btn-monospaced-size-xl);

		@include scale-component {
			@include monospace($btn-monospaced-size-xl-mobile);
		}
	}

	&.btn-lg {
		@include monospace($btn-monospaced-size-lg);

		@include scale-component {
			@include monospace($btn-monospaced-size-lg-mobile);
		}
	}

	&.btn-sm {
		@include monospace($btn-monospaced-size-sm);

		@include scale-component {
			@include monospace($btn-monospaced-size-sm-mobile);
		}
	}
}

// Action Buttons

.btn-action {
	display: inline-block;
	position: relative;
	z-index: $zindex-btn-action;

	.btn {
		border-radius: $btn-action-border-radius;
	}
}

.btn-action-bottom-left {
	bottom: $btn-action-fixed-spacer-y;
	left: $btn-action-fixed-spacer-x;
	position: fixed;
}

.btn-action-bottom-right {
	bottom: $btn-action-fixed-spacer-y;
	position: fixed;
	right: $btn-action-fixed-spacer-x;
}

.btn-action-top-left {
	left: $btn-action-fixed-spacer-x;
	position: fixed;
	top: $btn-action-fixed-spacer-y;
}

.btn-action-top-right {
	position: fixed;
	right: $btn-action-fixed-spacer-x;
	top: $btn-action-fixed-spacer-y;
}

// Button Variants

@each $color, $value in $btn-palette {
	.btn-#{$color} {
		background-color: map-get($value, bg);
		border-color: map-get($value, border-color);
		color: map-get($value, color);

		&:hover {
			background-color: map-get($value, hover-bg);
			border-color: map-get($value, hover-border-color);
			color: map-get($value, hover-color);
		}

		&:focus,
		&.focus {
			background-color: map-get($value, focus-bg);
			border-color: map-get($value, focus-border-color);
			box-shadow: map-get($value, focus-box-shadow);
			color: map-get($value, focus-color);
		}

		&:active,
		&.active,
		.show > &.dropdown-toggle {
			background-color: map-get($value, active-bg);
			border-color: map-get($value, active-border-color);
			color: map-get($value, active-color);
		}

		&:disabled,
		&.disabled {
			background-color: map-get($value, disabled-bg);
			border-color: map-get($value, disabled-border-color);
			color: map-get($value, disabled-color);
		}
	}
}