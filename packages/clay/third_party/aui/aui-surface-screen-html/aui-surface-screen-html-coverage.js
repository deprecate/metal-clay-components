if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-surface-screen-html/aui-surface-screen-html.js']) {
   __coverage__['build/aui-surface-screen-html/aui-surface-screen-html.js'] = {"path":"build/aui-surface-screen-html/aui-surface-screen-html.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":35},"end":{"line":1,"column":54}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":29}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":53}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":10},"end":{"line":50,"column":25}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":32}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":12},"end":{"line":78,"column":30}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":33},"end":{"line":85,"column":56}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":33},"end":{"line":88,"column":56}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":12},"end":{"line":99,"column":23}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":19},"end":{"line":117,"column":33}}},"11":{"name":"(anonymous_11)","line":136,"loc":{"start":{"line":136,"column":33},"end":{"line":136,"column":48}}},"12":{"name":"(anonymous_12)","line":153,"loc":{"start":{"line":153,"column":24},"end":{"line":153,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":225,"column":82}},"2":{"start":{"line":3,"column":0},"end":{"line":222,"column":3}},"3":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"4":{"start":{"line":20,"column":12},"end":{"line":20,"column":34}},"5":{"start":{"line":36,"column":8},"end":{"line":36,"column":49}},"6":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"7":{"start":{"line":39,"column":12},"end":{"line":39,"column":34}},"8":{"start":{"line":51,"column":8},"end":{"line":52,"column":16}},"9":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"10":{"start":{"line":55,"column":12},"end":{"line":55,"column":55}},"11":{"start":{"line":58,"column":8},"end":{"line":58,"column":30}},"12":{"start":{"line":59,"column":8},"end":{"line":59,"column":49}},"13":{"start":{"line":60,"column":8},"end":{"line":60,"column":48}},"14":{"start":{"line":72,"column":8},"end":{"line":73,"column":20}},"15":{"start":{"line":75,"column":8},"end":{"line":75,"column":32}},"16":{"start":{"line":77,"column":8},"end":{"line":102,"column":10}},"17":{"start":{"line":79,"column":16},"end":{"line":97,"column":19}},"18":{"start":{"line":86,"column":28},"end":{"line":86,"column":66}},"19":{"start":{"line":89,"column":28},"end":{"line":89,"column":63}},"20":{"start":{"line":90,"column":28},"end":{"line":90,"column":63}},"21":{"start":{"line":91,"column":28},"end":{"line":91,"column":71}},"22":{"start":{"line":92,"column":28},"end":{"line":92,"column":52}},"23":{"start":{"line":93,"column":28},"end":{"line":93,"column":42}},"24":{"start":{"line":100,"column":16},"end":{"line":100,"column":40}},"25":{"start":{"line":104,"column":8},"end":{"line":104,"column":23}},"26":{"start":{"line":118,"column":8},"end":{"line":118,"column":25}},"27":{"start":{"line":120,"column":8},"end":{"line":123,"column":9}},"28":{"start":{"line":121,"column":12},"end":{"line":121,"column":24}},"29":{"start":{"line":122,"column":12},"end":{"line":122,"column":28}},"30":{"start":{"line":125,"column":8},"end":{"line":125,"column":22}},"31":{"start":{"line":137,"column":8},"end":{"line":137,"column":56}},"32":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"33":{"start":{"line":140,"column":12},"end":{"line":140,"column":49}},"34":{"start":{"line":154,"column":8},"end":{"line":154,"column":60}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"4":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"5":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"6":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":15},"end":{"line":154,"column":35}},{"start":{"line":154,"column":39},"end":{"line":154,"column":59}}]}},"code":["(function () { YUI.add('aui-surface-screen-html', function (A, NAME) {","","A.HTMLScreen = A.Base.create('htmlScreen', A.Screen, [], {","    /**","     * Holds the IO request.","     *","     * @property _request","     * @type {Object}","     * @protected","     */","    _request: null,","","    /**","     * Aborts any outstanding request.","     *","     * @method abortRequest","     */","    abortRequest: function() {","        if (this._request) {","            this._request.abort();","        }","    },","","    /**","     * Returns content for given surface from the provided content.","     *","     * @method getSurfaceContent","     * @param {String} surfaceId The ID of the surface, which content should be","     *     loaded.","     * @contents {Node} The content container from which the surface content","     *     will be retrieved.","     * @return {String|Node} String or Node instance which contains the content","     *     of the surface.","     */","    getSurfaceContent: function(surfaceId, contents) {","        var frag = contents.one('#' + surfaceId);","","        if (frag) {","            return frag.getHTML();","        }","    },","","    /**","     * Loads the content for all surfaces in one AJAX request from the server.","     *","     * @method load","     * @return {CancellablePromise} Promise, which should be resolved with the","     *     returned content from the server.","     */","    load: function(path) {","        var cache = this.getCache(),","            url;","","        if (A.Lang.isValue(cache)) {","            return A.CancellablePromise.resolve(cache);","        }","","        url = new A.Url(path);","        url.addParameters(this.get('urlParams'));","        return this.loadContent(url.toString());","    },","","    /**","     * Loads the content from server via single AJAX request.","     *","     * @method loadContent","     * @protected","     * @return {CancellablePromise} Promise, which should be resolved with the returned","     *     content from the server.","     */","    loadContent: function(path) {","        var instance = this,","            promise;","","        instance.abortRequest();","","        promise = new A.CancellablePromise(","            function(resolve) {","                instance._request = A.io(path, {","                    headers: {","                        'X-PJAX': 'true'","                    },","                    method: instance.get('method'),","                    on: {","                        failure: function(id, response) {","                            promise.cancel(response.responseText);","                        },","                        success: function(id, response) {","                            var frag = A.Node.create('<div/>');","                            frag.append(response.responseText);","                            instance._setScreenTitleFromFragment(frag);","                            instance.addCache(frag);","                            resolve(frag);","                        }","                    },","                    timeout: instance.get('timeout')","                });","            },","            function() {","                instance.abortRequest();","            }","        );","","        return promise;","    },","","    /**","     * Setter for urlParams attribute.","     *","     * @method _setUrlParams","     * @protected","     * @return {String|Object} If the provided value was string, it will be","     *     converted to Object with one property - the provided string and \"1\"","     *     as value. Otherwise, the provided object will be passed directly to","     *     the attribute value.","     */","    _setUrlParams: function(val) {","        var params = val;","","        if (A.Lang.isString(val)) {","            params = {};","            params[val] = 1;","        }","","        return params;","    },","","    /**","     * Retrieves the title from the provided content and sets it to title","     * attribute of the class.","     *","     * @method _setScreenTitleFromFragment","     * @param  {Node} frag The container from which the title should be","     *     retrieve.","     */","    _setScreenTitleFromFragment: function(frag) {","        var title = frag.one(this.get('titleSelector'));","","        if (title) {","            this.set('title', title.get('text'));","        }","    },","","    /**","     * Validates the value of urlParams. The value could be String or Object","     * with key and values. During URL construction, they will be added to the","     * other parameters.","     *","     * @method _validateUrlParams","     * @protected","     * @return {Boolean} true if val is String or an Object.","     */","    _validateUrlParams: function(val) {","        return A.Lang.isString(val) || A.Lang.isObject(val);","    }","}, {","    ATTRS: {","        /**","         * @attribute cacheable","         * @default true","         * @type Boolean","         */","        cacheable: {","            value: true","        },","","        /**","         * Ajax request method.","         *","         * @attribute method","         * @type {String}","         * @default GET","         **/","        method: {","            validator: A.Lang.isString,","            value: 'GET'","        },","","        /**","         * CSS selector used to extract a page title from the content of a page","         * loaded via Pjax.","         *","         * By default this is set to extract the title from the `<title>`","         * element, but you could customize it to extract the title from an","         * `<h1>`, or from any other element, if that's more appropriate for the","         * content you're loading.","         *","         * @attribute titleSelector","         * @type String","         * @default \"title\"","         **/","        titleSelector: {","            value: 'title'","        },","","        /**","         * Time in milliseconds after which an Ajax request should time out.","         *","         * @attribute timeout","         * @type {Number}","         * @default 30000","         **/","        timeout: {","            value: 30000","        },","","        /**","         * Could be String or Object with multiple keys and values. If String,","         * the defaule value will be \"1\". If an Object with multiple keys and","         * values, they will be concatenated to the URL.","         *","         * @attribute urlParams","         * @type {String|Object}","         * @default pjax","         */","        urlParams: {","            setter: '_setUrlParams',","            validator: '_validateUrlParams',","            value: 'pjax'","        }","    }","});","","","}, '2.5.0', {\"requires\": [\"io\", \"aui-promise\", \"aui-surface-screen\", \"aui-url\"]});","","}());"]};
}
var __cov_7xKEWfAqC7w8kv0HjCC0SA = __coverage__['build/aui-surface-screen-html/aui-surface-screen-html.js'];
__cov_7xKEWfAqC7w8kv0HjCC0SA.s['1']++;YUI.add('aui-surface-screen-html',function(A,NAME){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['1']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['2']++;A.HTMLScreen=A.Base.create('htmlScreen',A.Screen,[],{_request:null,abortRequest:function(){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['2']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['3']++;if(this._request){__cov_7xKEWfAqC7w8kv0HjCC0SA.b['1'][0]++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['4']++;this._request.abort();}else{__cov_7xKEWfAqC7w8kv0HjCC0SA.b['1'][1]++;}},getSurfaceContent:function(surfaceId,contents){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['3']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['5']++;var frag=contents.one('#'+surfaceId);__cov_7xKEWfAqC7w8kv0HjCC0SA.s['6']++;if(frag){__cov_7xKEWfAqC7w8kv0HjCC0SA.b['2'][0]++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['7']++;return frag.getHTML();}else{__cov_7xKEWfAqC7w8kv0HjCC0SA.b['2'][1]++;}},load:function(path){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['4']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['8']++;var cache=this.getCache(),url;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['9']++;if(A.Lang.isValue(cache)){__cov_7xKEWfAqC7w8kv0HjCC0SA.b['3'][0]++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['10']++;return A.CancellablePromise.resolve(cache);}else{__cov_7xKEWfAqC7w8kv0HjCC0SA.b['3'][1]++;}__cov_7xKEWfAqC7w8kv0HjCC0SA.s['11']++;url=new A.Url(path);__cov_7xKEWfAqC7w8kv0HjCC0SA.s['12']++;url.addParameters(this.get('urlParams'));__cov_7xKEWfAqC7w8kv0HjCC0SA.s['13']++;return this.loadContent(url.toString());},loadContent:function(path){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['5']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['14']++;var instance=this,promise;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['15']++;instance.abortRequest();__cov_7xKEWfAqC7w8kv0HjCC0SA.s['16']++;promise=new A.CancellablePromise(function(resolve){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['6']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['17']++;instance._request=A.io(path,{headers:{'X-PJAX':'true'},method:instance.get('method'),on:{failure:function(id,response){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['7']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['18']++;promise.cancel(response.responseText);},success:function(id,response){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['8']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['19']++;var frag=A.Node.create('<div/>');__cov_7xKEWfAqC7w8kv0HjCC0SA.s['20']++;frag.append(response.responseText);__cov_7xKEWfAqC7w8kv0HjCC0SA.s['21']++;instance._setScreenTitleFromFragment(frag);__cov_7xKEWfAqC7w8kv0HjCC0SA.s['22']++;instance.addCache(frag);__cov_7xKEWfAqC7w8kv0HjCC0SA.s['23']++;resolve(frag);}},timeout:instance.get('timeout')});},function(){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['9']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['24']++;instance.abortRequest();});__cov_7xKEWfAqC7w8kv0HjCC0SA.s['25']++;return promise;},_setUrlParams:function(val){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['10']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['26']++;var params=val;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['27']++;if(A.Lang.isString(val)){__cov_7xKEWfAqC7w8kv0HjCC0SA.b['4'][0]++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['28']++;params={};__cov_7xKEWfAqC7w8kv0HjCC0SA.s['29']++;params[val]=1;}else{__cov_7xKEWfAqC7w8kv0HjCC0SA.b['4'][1]++;}__cov_7xKEWfAqC7w8kv0HjCC0SA.s['30']++;return params;},_setScreenTitleFromFragment:function(frag){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['11']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['31']++;var title=frag.one(this.get('titleSelector'));__cov_7xKEWfAqC7w8kv0HjCC0SA.s['32']++;if(title){__cov_7xKEWfAqC7w8kv0HjCC0SA.b['5'][0]++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['33']++;this.set('title',title.get('text'));}else{__cov_7xKEWfAqC7w8kv0HjCC0SA.b['5'][1]++;}},_validateUrlParams:function(val){__cov_7xKEWfAqC7w8kv0HjCC0SA.f['12']++;__cov_7xKEWfAqC7w8kv0HjCC0SA.s['34']++;return(__cov_7xKEWfAqC7w8kv0HjCC0SA.b['6'][0]++,A.Lang.isString(val))||(__cov_7xKEWfAqC7w8kv0HjCC0SA.b['6'][1]++,A.Lang.isObject(val));}},{ATTRS:{cacheable:{value:true},method:{validator:A.Lang.isString,value:'GET'},titleSelector:{value:'title'},timeout:{value:30000},urlParams:{setter:'_setUrlParams',validator:'_validateUrlParams',value:'pjax'}}});},'2.5.0',{'requires':['io','aui-promise','aui-surface-screen','aui-url']});
