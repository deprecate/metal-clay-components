if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-surface-base/aui-surface-base.js']) {
   __coverage__['build/aui-surface-base/aui-surface-base.js'] = {"path":"build/aui-surface-base/aui-surface-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":28},"end":{"line":1,"column":47}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":18},"end":{"line":3,"column":31}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":17},"end":{"line":43,"column":28}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":16},"end":{"line":66,"column":48}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":17},"end":{"line":93,"column":36}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":14},"end":{"line":104,"column":33}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":11},"end":{"line":117,"column":28}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":10},"end":{"line":140,"column":29}}},"9":{"name":"(anonymous_9)","line":175,"loc":{"start":{"line":175,"column":12},"end":{"line":175,"column":31}}},"10":{"name":"(anonymous_10)","line":187,"loc":{"start":{"line":187,"column":14},"end":{"line":187,"column":25}}},"11":{"name":"(anonymous_11)","line":200,"loc":{"start":{"line":200,"column":16},"end":{"line":200,"column":35}}},"12":{"name":"(anonymous_12)","line":211,"loc":{"start":{"line":211,"column":13},"end":{"line":211,"column":32}}},"13":{"name":"(anonymous_13)","line":227,"loc":{"start":{"line":227,"column":21},"end":{"line":227,"column":32}}},"14":{"name":"(anonymous_14)","line":260,"loc":{"start":{"line":260,"column":16},"end":{"line":260,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":272,"column":118}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":50}},"4":{"start":{"line":7,"column":0},"end":{"line":269,"column":3}},"5":{"start":{"line":44,"column":8},"end":{"line":44,"column":32}},"6":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"7":{"start":{"line":47,"column":12},"end":{"line":47,"column":65}},"8":{"start":{"line":50,"column":8},"end":{"line":50,"column":33}},"9":{"start":{"line":52,"column":8},"end":{"line":52,"column":82}},"10":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"11":{"start":{"line":68,"column":12},"end":{"line":68,"column":43}},"12":{"start":{"line":71,"column":8},"end":{"line":71,"column":89}},"13":{"start":{"line":73,"column":8},"end":{"line":74,"column":47}},"14":{"start":{"line":76,"column":8},"end":{"line":76,"column":34}},"15":{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},"16":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"17":{"start":{"line":80,"column":12},"end":{"line":80,"column":29}},"18":{"start":{"line":83,"column":8},"end":{"line":83,"column":21}},"19":{"start":{"line":94,"column":8},"end":{"line":94,"column":82}},"20":{"start":{"line":105,"column":8},"end":{"line":105,"column":51}},"21":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"22":{"start":{"line":119,"column":12},"end":{"line":119,"column":27}},"23":{"start":{"line":122,"column":8},"end":{"line":122,"column":56}},"24":{"start":{"line":123,"column":8},"end":{"line":127,"column":9}},"25":{"start":{"line":124,"column":12},"end":{"line":126,"column":15}},"26":{"start":{"line":129,"column":8},"end":{"line":129,"column":23}},"27":{"start":{"line":141,"column":8},"end":{"line":144,"column":41}},"28":{"start":{"line":146,"column":8},"end":{"line":150,"column":9}},"29":{"start":{"line":149,"column":12},"end":{"line":149,"column":35}},"30":{"start":{"line":152,"column":8},"end":{"line":154,"column":9}},"31":{"start":{"line":153,"column":12},"end":{"line":153,"column":26}},"32":{"start":{"line":158,"column":8},"end":{"line":158,"column":26}},"33":{"start":{"line":159,"column":8},"end":{"line":161,"column":9}},"34":{"start":{"line":160,"column":12},"end":{"line":160,"column":26}},"35":{"start":{"line":163,"column":8},"end":{"line":163,"column":45}},"36":{"start":{"line":164,"column":8},"end":{"line":164,"column":30}},"37":{"start":{"line":166,"column":8},"end":{"line":166,"column":24}},"38":{"start":{"line":176,"column":8},"end":{"line":176,"column":44}},"39":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"40":{"start":{"line":179,"column":12},"end":{"line":179,"column":31}},"41":{"start":{"line":188,"column":8},"end":{"line":188,"column":30}},"42":{"start":{"line":201,"column":8},"end":{"line":201,"column":89}},"43":{"start":{"line":212,"column":8},"end":{"line":212,"column":47}},"44":{"start":{"line":228,"column":16},"end":{"line":228,"column":44}},"45":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"46":{"start":{"line":262,"column":12},"end":{"line":262,"column":24}},"47":{"start":{"line":264,"column":8},"end":{"line":266,"column":9}},"48":{"start":{"line":265,"column":12},"end":{"line":265,"column":22}},"49":{"start":{"line":267,"column":8},"end":{"line":267,"column":20}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"4":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"5":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":30},"end":{"line":122,"column":36}},{"start":{"line":122,"column":40},"end":{"line":122,"column":54}}]},"6":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"7":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"8":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"9":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":16}},{"start":{"line":152,"column":20},"end":{"line":152,"column":31}}]},"10":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"11":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":12},"end":{"line":159,"column":14}},{"start":{"line":159,"column":18},"end":{"line":159,"column":20}},{"start":{"line":159,"column":24},"end":{"line":159,"column":35}}]},"12":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"13":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"14":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":8},"end":{"line":264,"column":8}},{"start":{"line":264,"column":8},"end":{"line":264,"column":8}}]}},"code":["(function () { YUI.add('aui-surface-base', function (A, NAME) {","","var getNodeById = function(id) {","    return A.one(A.config.doc.getElementById(id));","};","","A.Surface = A.Base.create('surface', A.Base, [], {","    /**","     * Holds the active child element.","     *","     * @property activeChild","     * @type {Node}","     * @protected","     */","    activeChild: null,","","    /**","     * Holds the default child element.","     *","     * @property defaultChild","     * @type {Node}","     * @protected","     */","    defaultChild: null,","","    /**","     * Holds the element with the specified surface id, if not found creates a","     * new element with the specified id.","     *","     * @property el","     * @type {Node}","     * @protected","     */","    el: null,","","    /**","     * Construction logic executed during Surface instantiation.","     * Lifecycle.","     *","     * @method initializer","     * @protected","     */","    initializer: function() {","        var id = this.get('id');","","        if (!id) {","            throw new Error('Surface element id not specified.');","        }","","        this.el = this.getEl(id);","","        this.activeChild = this.defaultChild = this.addContent(A.Surface.DEFAULT);","    },","","    /**","     * Adds screen content to a surface. If content hasn't been passed, see if","     * an element exists in the DOM that matches the id. By convention, the","     * element should already be nested in the right element and should have an","     * id that is a concatentation of the surface id + '-' + the screen id.","     *","     * @method addContent","     * @param {String} screenId The screen id the content belongs too.","     * @param {String | Node} opt_content The string content or node to add.","     * @return {Node}","     */","    addContent: function(screenId, opt_content) {","        if (!opt_content) {","            return this.getChild(screenId);","        }","","        A.log('Screen [' + screenId + '] add content to surface [' + this + ']', 'info');","","        var el = this.getEl(),","            child = this.createChild(screenId);","","        child.append(opt_content);","        this.transition(child, null);","","        if (el) {","            el.append(child);","        }","","        return child;","    },","","    /**","     * Creates child node of the surface.","     *","     * @method createChild","     * @param {String} screenId The screen id.","     * @return {Node | null}","     */","    createChild: function(screenId) {","        return A.Node.create('<div/>').setAttribute('id', this._makeId(screenId));","    },","","    /**","     * Gets child node of the surface.","     *","     * @method getChild","     * @param {String} screenId The screen id.","     * @return {Node | null}","     */","    getChild: function(screenId) {","        return getNodeById(this._makeId(screenId));","    },","","    /**","     * Retrieves the surface element from DOM, and sets it to the el property of","     * the current instance.","     *","     * @method getEl","     * @param  {String} opt_id The ID of the surface element. If not provided,","     *     this.el will be used.","     * @return {Node} The retrieved element.","     */","    getEl: function(opt_id) {","        if (this.el) {","            return this.el;","        }","","        this.el = getNodeById(opt_id || this.get('id'));","        if (this.el) {","            this.el.plug(A.Plugin.ParseContent, {","                preserveScriptNodes: true","            });","        }","","        return this.el;","    },","","    /**","     * Shows screen content from a surface.","     *","     * @method show","     * @param {String} screenId The screen id to show.","     * @return {Promise} This can return a promise, which will pause the","     *     navigation until it is resolved.","     */","    show: function(screenId) {","        var deferred,","            el,","            from = this.activeChild,","            to = this.getChild(screenId);","","        if (!to) {","            // When surface child for screen not found retrieve the default","            // content from DOM element with id `surfaceId-default`","            to = this.defaultChild;","        }","","        if (from && from !== to) {","            from.remove();","        }","","        // Avoid repainting if the child is already in place or the element does","        // not exist","        el = this.getEl();","        if (el && to && !to.inDoc()) {","            el.append(to);","        }","","        deferred = this.transition(from, to);","        this.activeChild = to;","","        return deferred;","    },","","    /**","     * Removes screen content from a surface.","     *","     * @method remove","     * @param {String} screenId The screen id to remove.","     */","    remove: function(screenId) {","        var child = this.getChild(screenId);","","        if (child) {","            child.remove(true);","        }","    },","","    /**","     * @method toString","     * @return {String}","     */","    toString: function() {","        return this.get('id');","    },","","    /**","     * Invokes the transition function specified on `transition` attribute.","     *","     * @method transition","     * @param {Node} from","     * @param {Node} to","     * @return {Promise} This can return a promise, which will pause the","     *     navigation until it is resolved.","     */","    transition: function(from, to) {","        return A.CancellablePromise.resolve(this.get('transition').call(this, from, to));","    },","","    /**","     * Make the id for the element that holds content for a screen.","     *","     * @method _makeId","     * @param {String} screenId The screen id the content belongs too.","     * @return {String}","     */","    _makeId: function(screenId) {","        return this.get('id') + '-' + screenId;","    }","}, {","    ATTRS: {","        /**","         * If false, the screen will be disposed after being deactivated.","         * If true, the surface content will be left in the DOM with","         * display:none.","         *","         * @attribute transition","         * @default false","         * @type {Function}","         */","        transition: {","            validator: A.Lang.isFunction,","            valueFn: function() {","                return A.Surface.TRANSITION;","            }","        },","","        /**","         * The surface id.","         *","         * @attribute id","         * @writeOnce","         * @default Generated using `A.guid()`.","         * @type {String}","         */","        id: {","            validator: A.Lang.isString,","            writeOnce: true","        }","    },","","    DEFAULT: 'default',","","    /**","     * Transition function that returns a promise, the navigation will be paused","     * until all surfaces' promise have completed. This is useful for","     * animations.","     *","     * @static","     * @property TRANSITION","     * @param {Node} from","     * @param {Node} to","     * @return {Promise} This can return a promise, which will pause the","     *     navigation until it is resolved.","     */","    TRANSITION: function(from, to) {","        if (from) {","            from.hide();","        }","        if (to) {","            to.show();","        }","        return null;","    }","});","","","}, '2.5.0', {\"requires\": [\"base-build\", \"node-style\", \"timers\", \"aui-debounce\", \"aui-promise\", \"aui-parse-content\"]});","","}());"]};
}
var __cov_3jUDyd91aSWlZaIokklN9A = __coverage__['build/aui-surface-base/aui-surface-base.js'];
__cov_3jUDyd91aSWlZaIokklN9A.s['1']++;YUI.add('aui-surface-base',function(A,NAME){__cov_3jUDyd91aSWlZaIokklN9A.f['1']++;__cov_3jUDyd91aSWlZaIokklN9A.s['2']++;var getNodeById=function(id){__cov_3jUDyd91aSWlZaIokklN9A.f['2']++;__cov_3jUDyd91aSWlZaIokklN9A.s['3']++;return A.one(A.config.doc.getElementById(id));};__cov_3jUDyd91aSWlZaIokklN9A.s['4']++;A.Surface=A.Base.create('surface',A.Base,[],{activeChild:null,defaultChild:null,el:null,initializer:function(){__cov_3jUDyd91aSWlZaIokklN9A.f['3']++;__cov_3jUDyd91aSWlZaIokklN9A.s['5']++;var id=this.get('id');__cov_3jUDyd91aSWlZaIokklN9A.s['6']++;if(!id){__cov_3jUDyd91aSWlZaIokklN9A.b['1'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['7']++;throw new Error('Surface element id not specified.');}else{__cov_3jUDyd91aSWlZaIokklN9A.b['1'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['8']++;this.el=this.getEl(id);__cov_3jUDyd91aSWlZaIokklN9A.s['9']++;this.activeChild=this.defaultChild=this.addContent(A.Surface.DEFAULT);},addContent:function(screenId,opt_content){__cov_3jUDyd91aSWlZaIokklN9A.f['4']++;__cov_3jUDyd91aSWlZaIokklN9A.s['10']++;if(!opt_content){__cov_3jUDyd91aSWlZaIokklN9A.b['2'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['11']++;return this.getChild(screenId);}else{__cov_3jUDyd91aSWlZaIokklN9A.b['2'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['12']++;A.log('Screen ['+screenId+'] add content to surface ['+this+']','info');__cov_3jUDyd91aSWlZaIokklN9A.s['13']++;var el=this.getEl(),child=this.createChild(screenId);__cov_3jUDyd91aSWlZaIokklN9A.s['14']++;child.append(opt_content);__cov_3jUDyd91aSWlZaIokklN9A.s['15']++;this.transition(child,null);__cov_3jUDyd91aSWlZaIokklN9A.s['16']++;if(el){__cov_3jUDyd91aSWlZaIokklN9A.b['3'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['17']++;el.append(child);}else{__cov_3jUDyd91aSWlZaIokklN9A.b['3'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['18']++;return child;},createChild:function(screenId){__cov_3jUDyd91aSWlZaIokklN9A.f['5']++;__cov_3jUDyd91aSWlZaIokklN9A.s['19']++;return A.Node.create('<div/>').setAttribute('id',this._makeId(screenId));},getChild:function(screenId){__cov_3jUDyd91aSWlZaIokklN9A.f['6']++;__cov_3jUDyd91aSWlZaIokklN9A.s['20']++;return getNodeById(this._makeId(screenId));},getEl:function(opt_id){__cov_3jUDyd91aSWlZaIokklN9A.f['7']++;__cov_3jUDyd91aSWlZaIokklN9A.s['21']++;if(this.el){__cov_3jUDyd91aSWlZaIokklN9A.b['4'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['22']++;return this.el;}else{__cov_3jUDyd91aSWlZaIokklN9A.b['4'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['23']++;this.el=getNodeById((__cov_3jUDyd91aSWlZaIokklN9A.b['5'][0]++,opt_id)||(__cov_3jUDyd91aSWlZaIokklN9A.b['5'][1]++,this.get('id')));__cov_3jUDyd91aSWlZaIokklN9A.s['24']++;if(this.el){__cov_3jUDyd91aSWlZaIokklN9A.b['6'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['25']++;this.el.plug(A.Plugin.ParseContent,{preserveScriptNodes:true});}else{__cov_3jUDyd91aSWlZaIokklN9A.b['6'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['26']++;return this.el;},show:function(screenId){__cov_3jUDyd91aSWlZaIokklN9A.f['8']++;__cov_3jUDyd91aSWlZaIokklN9A.s['27']++;var deferred,el,from=this.activeChild,to=this.getChild(screenId);__cov_3jUDyd91aSWlZaIokklN9A.s['28']++;if(!to){__cov_3jUDyd91aSWlZaIokklN9A.b['7'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['29']++;to=this.defaultChild;}else{__cov_3jUDyd91aSWlZaIokklN9A.b['7'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['30']++;if((__cov_3jUDyd91aSWlZaIokklN9A.b['9'][0]++,from)&&(__cov_3jUDyd91aSWlZaIokklN9A.b['9'][1]++,from!==to)){__cov_3jUDyd91aSWlZaIokklN9A.b['8'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['31']++;from.remove();}else{__cov_3jUDyd91aSWlZaIokklN9A.b['8'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['32']++;el=this.getEl();__cov_3jUDyd91aSWlZaIokklN9A.s['33']++;if((__cov_3jUDyd91aSWlZaIokklN9A.b['11'][0]++,el)&&(__cov_3jUDyd91aSWlZaIokklN9A.b['11'][1]++,to)&&(__cov_3jUDyd91aSWlZaIokklN9A.b['11'][2]++,!to.inDoc())){__cov_3jUDyd91aSWlZaIokklN9A.b['10'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['34']++;el.append(to);}else{__cov_3jUDyd91aSWlZaIokklN9A.b['10'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['35']++;deferred=this.transition(from,to);__cov_3jUDyd91aSWlZaIokklN9A.s['36']++;this.activeChild=to;__cov_3jUDyd91aSWlZaIokklN9A.s['37']++;return deferred;},remove:function(screenId){__cov_3jUDyd91aSWlZaIokklN9A.f['9']++;__cov_3jUDyd91aSWlZaIokklN9A.s['38']++;var child=this.getChild(screenId);__cov_3jUDyd91aSWlZaIokklN9A.s['39']++;if(child){__cov_3jUDyd91aSWlZaIokklN9A.b['12'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['40']++;child.remove(true);}else{__cov_3jUDyd91aSWlZaIokklN9A.b['12'][1]++;}},toString:function(){__cov_3jUDyd91aSWlZaIokklN9A.f['10']++;__cov_3jUDyd91aSWlZaIokklN9A.s['41']++;return this.get('id');},transition:function(from,to){__cov_3jUDyd91aSWlZaIokklN9A.f['11']++;__cov_3jUDyd91aSWlZaIokklN9A.s['42']++;return A.CancellablePromise.resolve(this.get('transition').call(this,from,to));},_makeId:function(screenId){__cov_3jUDyd91aSWlZaIokklN9A.f['12']++;__cov_3jUDyd91aSWlZaIokklN9A.s['43']++;return this.get('id')+'-'+screenId;}},{ATTRS:{transition:{validator:A.Lang.isFunction,valueFn:function(){__cov_3jUDyd91aSWlZaIokklN9A.f['13']++;__cov_3jUDyd91aSWlZaIokklN9A.s['44']++;return A.Surface.TRANSITION;}},id:{validator:A.Lang.isString,writeOnce:true}},DEFAULT:'default',TRANSITION:function(from,to){__cov_3jUDyd91aSWlZaIokklN9A.f['14']++;__cov_3jUDyd91aSWlZaIokklN9A.s['45']++;if(from){__cov_3jUDyd91aSWlZaIokklN9A.b['13'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['46']++;from.hide();}else{__cov_3jUDyd91aSWlZaIokklN9A.b['13'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['47']++;if(to){__cov_3jUDyd91aSWlZaIokklN9A.b['14'][0]++;__cov_3jUDyd91aSWlZaIokklN9A.s['48']++;to.show();}else{__cov_3jUDyd91aSWlZaIokklN9A.b['14'][1]++;}__cov_3jUDyd91aSWlZaIokklN9A.s['49']++;return null;}});},'2.5.0',{'requires':['base-build','node-style','timers','aui-debounce','aui-promise','aui-parse-content']});
