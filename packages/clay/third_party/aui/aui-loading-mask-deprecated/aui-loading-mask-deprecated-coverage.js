if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-loading-mask-deprecated/aui-loading-mask-deprecated.js']) {
   __coverage__['build/aui-loading-mask-deprecated/aui-loading-mask-deprecated.js'] = {"path":"build/aui-loading-mask-deprecated/aui-loading-mask-deprecated.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":39},"end":{"line":1,"column":58}}},"2":{"name":"(anonymous_2)","line":95,"loc":{"start":{"line":95,"column":21},"end":{"line":95,"column":35}}},"3":{"name":"(anonymous_3)","line":127,"loc":{"start":{"line":127,"column":20},"end":{"line":127,"column":31}}},"4":{"name":"(anonymous_4)","line":150,"loc":{"start":{"line":150,"column":21},"end":{"line":150,"column":38}}},"5":{"name":"(anonymous_5)","line":171,"loc":{"start":{"line":171,"column":18},"end":{"line":171,"column":29}}},"6":{"name":"(anonymous_6)","line":188,"loc":{"start":{"line":188,"column":16},"end":{"line":188,"column":27}}},"7":{"name":"(anonymous_7)","line":201,"loc":{"start":{"line":201,"column":28},"end":{"line":201,"column":39}}},"8":{"name":"(anonymous_8)","line":214,"loc":{"start":{"line":214,"column":23},"end":{"line":214,"column":34}}},"9":{"name":"(anonymous_9)","line":229,"loc":{"start":{"line":229,"column":21},"end":{"line":229,"column":32}}},"10":{"name":"(anonymous_10)","line":245,"loc":{"start":{"line":245,"column":29},"end":{"line":245,"column":45}}},"11":{"name":"(anonymous_11)","line":266,"loc":{"start":{"line":266,"column":28},"end":{"line":266,"column":39}}},"12":{"name":"(anonymous_12)","line":293,"loc":{"start":{"line":293,"column":29},"end":{"line":293,"column":46}}},"13":{"name":"(anonymous_13)","line":296,"loc":{"start":{"line":296,"column":27},"end":{"line":296,"column":48}}},"14":{"name":"(anonymous_14)","line":301,"loc":{"start":{"line":301,"column":32},"end":{"line":301,"column":46}}},"15":{"name":"(anonymous_15)","line":314,"loc":{"start":{"line":314,"column":29},"end":{"line":314,"column":46}}},"16":{"name":"(anonymous_16)","line":338,"loc":{"start":{"line":338,"column":36},"end":{"line":338,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":346,"column":88}},"2":{"start":{"line":9,"column":0},"end":{"line":33,"column":28}},"3":{"start":{"line":58,"column":0},"end":{"line":312,"column":3}},"4":{"start":{"line":96,"column":16},"end":{"line":96,"column":36}},"5":{"start":{"line":97,"column":16},"end":{"line":97,"column":52}},"6":{"start":{"line":99,"column":16},"end":{"line":101,"column":18}},"7":{"start":{"line":128,"column":16},"end":{"line":128,"column":36}},"8":{"start":{"line":129,"column":16},"end":{"line":129,"column":48}},"9":{"start":{"line":131,"column":16},"end":{"line":133,"column":17}},"10":{"start":{"line":132,"column":20},"end":{"line":132,"column":53}},"11":{"start":{"line":135,"column":16},"end":{"line":135,"column":30}},"12":{"start":{"line":151,"column":12},"end":{"line":151,"column":32}},"13":{"start":{"line":153,"column":12},"end":{"line":157,"column":14}},"14":{"start":{"line":159,"column":12},"end":{"line":159,"column":32}},"15":{"start":{"line":160,"column":12},"end":{"line":160,"column":30}},"16":{"start":{"line":162,"column":12},"end":{"line":162,"column":49}},"17":{"start":{"line":172,"column":12},"end":{"line":172,"column":32}},"18":{"start":{"line":173,"column":12},"end":{"line":173,"column":48}},"19":{"start":{"line":175,"column":12},"end":{"line":175,"column":42}},"20":{"start":{"line":177,"column":12},"end":{"line":179,"column":14}},"21":{"start":{"line":189,"column":12},"end":{"line":189,"column":32}},"22":{"start":{"line":191,"column":12},"end":{"line":191,"column":42}},"23":{"start":{"line":202,"column":12},"end":{"line":202,"column":32}},"24":{"start":{"line":204,"column":12},"end":{"line":204,"column":96}},"25":{"start":{"line":215,"column":12},"end":{"line":215,"column":32}},"26":{"start":{"line":217,"column":12},"end":{"line":219,"column":14}},"27":{"start":{"line":230,"column":12},"end":{"line":230,"column":32}},"28":{"start":{"line":232,"column":12},"end":{"line":232,"column":47}},"29":{"start":{"line":234,"column":12},"end":{"line":234,"column":37}},"30":{"start":{"line":246,"column":12},"end":{"line":246,"column":32}},"31":{"start":{"line":247,"column":12},"end":{"line":247,"column":46}},"32":{"start":{"line":248,"column":12},"end":{"line":248,"column":75}},"33":{"start":{"line":250,"column":12},"end":{"line":250,"column":59}},"34":{"start":{"line":251,"column":12},"end":{"line":251,"column":90}},"35":{"start":{"line":253,"column":12},"end":{"line":255,"column":13}},"36":{"start":{"line":254,"column":16},"end":{"line":254,"column":39}},"37":{"start":{"line":267,"column":12},"end":{"line":267,"column":32}},"38":{"start":{"line":268,"column":12},"end":{"line":268,"column":46}},"39":{"start":{"line":278,"column":12},"end":{"line":281,"column":30}},"40":{"start":{"line":294,"column":12},"end":{"line":294,"column":32}},"41":{"start":{"line":296,"column":12},"end":{"line":309,"column":15}},"42":{"start":{"line":297,"column":16},"end":{"line":297,"column":62}},"43":{"start":{"line":299,"column":16},"end":{"line":308,"column":17}},"44":{"start":{"line":300,"column":20},"end":{"line":307,"column":23}},"45":{"start":{"line":302,"column":28},"end":{"line":302,"column":59}},"46":{"start":{"line":304,"column":28},"end":{"line":304,"column":39}},"47":{"start":{"line":314,"column":0},"end":{"line":341,"column":3}},"48":{"start":{"line":338,"column":4},"end":{"line":340,"column":6}},"49":{"start":{"line":339,"column":8},"end":{"line":339,"column":35}},"50":{"start":{"line":343,"column":0},"end":{"line":343,"column":28}}},"branchMap":{"1":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":16},"end":{"line":131,"column":16}},{"start":{"line":131,"column":16},"end":{"line":131,"column":16}}]},"2":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":53},"end":{"line":251,"column":65}},{"start":{"line":251,"column":69},"end":{"line":251,"column":87}}]},"3":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":12},"end":{"line":253,"column":12}},{"start":{"line":253,"column":12},"end":{"line":253,"column":12}}]},"4":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":16},"end":{"line":299,"column":16}},{"start":{"line":299,"column":16},"end":{"line":299,"column":16}}]}},"code":["(function () { YUI.add('aui-loading-mask-deprecated', function (A, NAME) {","","/**"," * The LoadingMask Utility"," *"," * @module aui-loading-mask"," */","","var Lang = A.Lang,","","    BOUNDING_BOX = 'boundingBox',","    CONTENT_BOX = 'contentBox',","    HIDE = 'hide',","    HOST = 'host',","    MESSAGE_EL = 'messageEl',","    NAME = 'loadingmask',","    POSITION = 'position',","    SHOW = 'show',","    STATIC = 'static',","    STRINGS = 'strings',","    TARGET = 'target',","    TOGGLE = 'toggle',","","    getClassName = A.getClassName,","","    CSS_LOADINGMASK = getClassName(NAME),","    CSS_MASKED = getClassName(NAME, 'masked'),","    CSS_MASKED_RELATIVE = getClassName(NAME, 'masked', 'relative'),","    CSS_MESSAGE_LOADING = getClassName(NAME, 'message'),","    CSS_MESSAGE_LOADING_CONTENT = getClassName(NAME, 'message', 'content'),","","    TPL_MESSAGE_LOADING = '<div class=\"' + CSS_MESSAGE_LOADING + '\"><div class=\"' + CSS_MESSAGE_LOADING_CONTENT +","        '\">{0}</div></div>';","","/**"," * <p><img src=\"assets/images/aui-loading-mask/main.png\"/></p>"," *"," * A base class for LoadingMask, providing:"," * <ul>"," *    <li>Cross browser mask functionality to cover an element or the entire page</li>"," *    <li>Customizable mask (i.e., background, opacity)</li>"," *    <li>Display a centered \"loading\" message on the masked node</li>"," * </ul>"," *"," * Quick Example:<br/>"," *"," * <pre><code>node.plug(A.LoadingMask, { background: '#000' });</code></pre>"," *"," * Check the list of <a href=\"LoadingMask.html#configattributes\">Configuration Attributes</a> available for"," * LoadingMask."," *"," * @param config {Object} Object literal specifying widget configuration properties."," *"," * @class LoadingMask"," * @constructor"," * @extends Plugin.Base"," */","var LoadingMask = A.Component.create({","","    /**","     * Static property provides a string to identify the class.","     *","     * @property LoadingMask.NAME","     * @type String","     * @static","     */","    NAME: NAME,","","    /**","     * Static property provides a string to identify the namespace.","     *","     * @property LoadingMask.NS","     * @type String","     * @static","     */","    NS: NAME,","","    /**","     * Static property used to define the default attribute","     * configuration for the LoadingMask.","     *","     * @property LoadingMask.ATTRS","     * @type Object","     * @static","     */","    ATTRS: {","        /**","         * Node element to display the message.","         *","         * @attribute messageEl","         * @default Generated HTML div element.","         * @type String","         */","        messageEl: {","            valueFn: function(val) {","                var instance = this;","                var strings = instance.get(STRINGS);","","                return A.Node.create(","                    Lang.sub(TPL_MESSAGE_LOADING, [strings.loading])","                );","            }","        },","","        /**","         * Strings used on the LoadingMask. See","         * <a href=\"Widget.html#method_strings\">strings</a>.","         *","         * @attribute strings","         * @default { loading: 'Loading&hellip;' }","         * @type Object","         */","        strings: {","            value: {","                loading: 'Loading&hellip;'","            }","        },","","        /**","         * Node where the mask will be positioned and re-dimensioned.","         *","         * @attribute target","         * @default null","         * @type Node | Widget","         */","        target: {","            setter: function() {","                var instance = this;","                var target = instance.get(HOST);","","                if (target instanceof A.Widget) {","                    target = target.get(CONTENT_BOX);","                }","","                return target;","            },","            value: null","        }","    },","","    EXTENDS: A.Plugin.Base,","","    prototype: {","        /**","         * Construction logic executed during LoadingMask instantiation. Lifecycle.","         *","         * @method initializer","         * @protected","         */","        initializer: function(config) {","            var instance = this;","","            instance.IGNORED_ATTRS = A.merge({","                    host: true","                },","                LoadingMask.ATTRS","            );","","            instance.renderUI();","            instance.bindUI();","","            instance._createDynamicAttrs(config);","        },","","        /**","         * Create the DOM structure for the LoadingMask. Lifecycle.","         *","         * @method renderUI","         * @protected","         */","        renderUI: function() {","            var instance = this;","            var strings = instance.get(STRINGS);","","            instance._renderOverlayMask();","","            instance.overlayMask.get(BOUNDING_BOX).append(","                instance.get(MESSAGE_EL)","            );","        },","","        /**","         * Bind the events on the LoadingMask UI. Lifecycle.","         *","         * @method bindUI","         * @protected","         */","        bindUI: function() {","            var instance = this;","","            instance._bindOverlayMaskUI();","        },","","        /**","         * Bind events to the","         * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>.","         *","         * @method _bindOverlayMaskUI","         * @protected","         */","        _bindOverlayMaskUI: function() {","            var instance = this;","","            instance.overlayMask.after('visibleChange', instance._afterVisibleChange, instance);","        },","","        /**","         * Center the","         * <a href=\"LoadingMask.html#config_messageEl\">messageEl</a> with the","         * <a href=\"LoadingMask.html#config_target\">target</a> node.","         *","         * @method centerMessage","         */","        centerMessage: function() {","            var instance = this;","","            instance.get(MESSAGE_EL).center(","                instance.overlayMask.get(BOUNDING_BOX)","            );","        },","","        /**","         * Invoke the","         * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>","         * <code>refreshMask</code> method.","         *","         * @method refreshMask","         */","        refreshMask: function() {","            var instance = this;","","            instance.overlayMask.refreshMask();","","            instance.centerMessage();","        },","","        /**","         * Fires after the value of the","         * <a href=\"LoadingMask.html#config_visible\">visible</a> attribute change.","         *","         * @method _afterVisibleChange","         * @param {EventFacade} event","         * @protected","         */","        _afterVisibleChange: function(event) {","            var instance = this;","            var target = instance.get(TARGET);","            var isStaticPositioned = (target.getStyle(POSITION) == STATIC);","","            target.toggleClass(CSS_MASKED, (event.newVal));","            target.toggleClass(CSS_MASKED_RELATIVE, (event.newVal && isStaticPositioned));","","            if (event.newVal) {","                instance.refreshMask();","            }","        },","","        /**","         * Render","         * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>","         * instance.","         *","         * @method _renderOverlayMask","         * @protected","         */","        _renderOverlayMask: function() {","            var instance = this;","            var target = instance.get(TARGET);","","            /**","             * Stores the <a href=\"OverlayMask.html\">OverlayMask</a> used","             * internally.","             *","             * @property overlayMask","             * @type OverlayMask","             * @protected","             */","            instance.overlayMask = new A.OverlayMask({","                target: target,","                cssClass: CSS_LOADINGMASK","            }).render(target);","        },","","        /**","         * Create dynamic attributes listeners to invoke the setter on","         * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a> after","         * the attribute is set on the LoadingMask instance.","         *","         * @method _createDynamicAttrs","         * @param {Object} config Object literal specifying widget configuration properties.","         * @protected","         */","        _createDynamicAttrs: function(config) {","            var instance = this;","","            A.each(config, function(value, key) {","                var ignoredAttr = instance.IGNORED_ATTRS[key];","","                if (!ignoredAttr) {","                    instance.addAttr(key, {","                        setter: function(val) {","                            this.overlayMask.set(key, val);","","                            return val;","                        },","                        value: value","                    });","                }","            });","        }","    }","});","","A.each([HIDE, SHOW, TOGGLE], function(method) {","    /**","     * Invoke the","     * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>","     * <code>hide</code> method.","     *","     * @method hide","     */","","    /**","     * Invoke the","     * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>","     * <code>show</code> method.","     *","     * @method show","     */","","    /**","     * Invoke the","     * <a href=\"LoadingMask.html#property_overlayMask\">overlayMask</a>","     * <code>toggle</code> method.","     *","     * @method toggle","     */","    LoadingMask.prototype[method] = function() {","        this.overlayMask[method]();","    };","});","","A.LoadingMask = LoadingMask;","","","}, '2.5.0', {\"requires\": [\"plugin\", \"aui-overlay-mask-deprecated\"], \"skinnable\": true});","","}());"]};
}
var __cov_mWx3HJOQuqAZmBztQBD0Rg = __coverage__['build/aui-loading-mask-deprecated/aui-loading-mask-deprecated.js'];
__cov_mWx3HJOQuqAZmBztQBD0Rg.s['1']++;YUI.add('aui-loading-mask-deprecated',function(A,NAME){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['1']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['2']++;var Lang=A.Lang,BOUNDING_BOX='boundingBox',CONTENT_BOX='contentBox',HIDE='hide',HOST='host',MESSAGE_EL='messageEl',NAME='loadingmask',POSITION='position',SHOW='show',STATIC='static',STRINGS='strings',TARGET='target',TOGGLE='toggle',getClassName=A.getClassName,CSS_LOADINGMASK=getClassName(NAME),CSS_MASKED=getClassName(NAME,'masked'),CSS_MASKED_RELATIVE=getClassName(NAME,'masked','relative'),CSS_MESSAGE_LOADING=getClassName(NAME,'message'),CSS_MESSAGE_LOADING_CONTENT=getClassName(NAME,'message','content'),TPL_MESSAGE_LOADING='<div class="'+CSS_MESSAGE_LOADING+'"><div class="'+CSS_MESSAGE_LOADING_CONTENT+'">{0}</div></div>';__cov_mWx3HJOQuqAZmBztQBD0Rg.s['3']++;var LoadingMask=A.Component.create({NAME:NAME,NS:NAME,ATTRS:{messageEl:{valueFn:function(val){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['2']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['4']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['5']++;var strings=instance.get(STRINGS);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['6']++;return A.Node.create(Lang.sub(TPL_MESSAGE_LOADING,[strings.loading]));}},strings:{value:{loading:'Loading&hellip;'}},target:{setter:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['3']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['7']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['8']++;var target=instance.get(HOST);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['9']++;if(target instanceof A.Widget){__cov_mWx3HJOQuqAZmBztQBD0Rg.b['1'][0]++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['10']++;target=target.get(CONTENT_BOX);}else{__cov_mWx3HJOQuqAZmBztQBD0Rg.b['1'][1]++;}__cov_mWx3HJOQuqAZmBztQBD0Rg.s['11']++;return target;},value:null}},EXTENDS:A.Plugin.Base,prototype:{initializer:function(config){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['4']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['12']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['13']++;instance.IGNORED_ATTRS=A.merge({host:true},LoadingMask.ATTRS);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['14']++;instance.renderUI();__cov_mWx3HJOQuqAZmBztQBD0Rg.s['15']++;instance.bindUI();__cov_mWx3HJOQuqAZmBztQBD0Rg.s['16']++;instance._createDynamicAttrs(config);},renderUI:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['5']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['17']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['18']++;var strings=instance.get(STRINGS);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['19']++;instance._renderOverlayMask();__cov_mWx3HJOQuqAZmBztQBD0Rg.s['20']++;instance.overlayMask.get(BOUNDING_BOX).append(instance.get(MESSAGE_EL));},bindUI:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['6']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['21']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['22']++;instance._bindOverlayMaskUI();},_bindOverlayMaskUI:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['7']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['23']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['24']++;instance.overlayMask.after('visibleChange',instance._afterVisibleChange,instance);},centerMessage:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['8']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['25']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['26']++;instance.get(MESSAGE_EL).center(instance.overlayMask.get(BOUNDING_BOX));},refreshMask:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['9']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['27']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['28']++;instance.overlayMask.refreshMask();__cov_mWx3HJOQuqAZmBztQBD0Rg.s['29']++;instance.centerMessage();},_afterVisibleChange:function(event){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['10']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['30']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['31']++;var target=instance.get(TARGET);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['32']++;var isStaticPositioned=target.getStyle(POSITION)==STATIC;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['33']++;target.toggleClass(CSS_MASKED,event.newVal);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['34']++;target.toggleClass(CSS_MASKED_RELATIVE,(__cov_mWx3HJOQuqAZmBztQBD0Rg.b['2'][0]++,event.newVal)&&(__cov_mWx3HJOQuqAZmBztQBD0Rg.b['2'][1]++,isStaticPositioned));__cov_mWx3HJOQuqAZmBztQBD0Rg.s['35']++;if(event.newVal){__cov_mWx3HJOQuqAZmBztQBD0Rg.b['3'][0]++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['36']++;instance.refreshMask();}else{__cov_mWx3HJOQuqAZmBztQBD0Rg.b['3'][1]++;}},_renderOverlayMask:function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['11']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['37']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['38']++;var target=instance.get(TARGET);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['39']++;instance.overlayMask=new A.OverlayMask({target:target,cssClass:CSS_LOADINGMASK}).render(target);},_createDynamicAttrs:function(config){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['12']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['40']++;var instance=this;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['41']++;A.each(config,function(value,key){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['13']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['42']++;var ignoredAttr=instance.IGNORED_ATTRS[key];__cov_mWx3HJOQuqAZmBztQBD0Rg.s['43']++;if(!ignoredAttr){__cov_mWx3HJOQuqAZmBztQBD0Rg.b['4'][0]++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['44']++;instance.addAttr(key,{setter:function(val){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['14']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['45']++;this.overlayMask.set(key,val);__cov_mWx3HJOQuqAZmBztQBD0Rg.s['46']++;return val;},value:value});}else{__cov_mWx3HJOQuqAZmBztQBD0Rg.b['4'][1]++;}});}}});__cov_mWx3HJOQuqAZmBztQBD0Rg.s['47']++;A.each([HIDE,SHOW,TOGGLE],function(method){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['15']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['48']++;LoadingMask.prototype[method]=function(){__cov_mWx3HJOQuqAZmBztQBD0Rg.f['16']++;__cov_mWx3HJOQuqAZmBztQBD0Rg.s['49']++;this.overlayMask[method]();};});__cov_mWx3HJOQuqAZmBztQBD0Rg.s['50']++;A.LoadingMask=LoadingMask;},'2.5.0',{'requires':['plugin','aui-overlay-mask-deprecated'],'skinnable':true});
