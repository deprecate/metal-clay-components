if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-ace-autocomplete-templateprocessor/aui-ace-autocomplete-templateprocessor.js']) {
   __coverage__['build/aui-ace-autocomplete-templateprocessor/aui-ace-autocomplete-templateprocessor.js'] = {"path":"build/aui-ace-autocomplete-templateprocessor/aui-ace-autocomplete-templateprocessor.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":50},"end":{"line":1,"column":69}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":20},"end":{"line":47,"column":68}}},"3":{"name":"(anonymous_3)","line":95,"loc":{"start":{"line":95,"column":23},"end":{"line":95,"column":59}}},"4":{"name":"(anonymous_4)","line":149,"loc":{"start":{"line":149,"column":22},"end":{"line":149,"column":46}}},"5":{"name":"(anonymous_5)","line":164,"loc":{"start":{"line":164,"column":23},"end":{"line":164,"column":39}}},"6":{"name":"(anonymous_6)","line":188,"loc":{"start":{"line":188,"column":29},"end":{"line":188,"column":47}}},"7":{"name":"(anonymous_7)","line":289,"loc":{"start":{"line":289,"column":20},"end":{"line":289,"column":35}}},"8":{"name":"(anonymous_8)","line":298,"loc":{"start":{"line":298,"column":32},"end":{"line":298,"column":47}}},"9":{"name":"(anonymous_9)","line":326,"loc":{"start":{"line":326,"column":24},"end":{"line":326,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":404,"column":57}},"2":{"start":{"line":10,"column":0},"end":{"line":399,"column":7}},"3":{"start":{"line":48,"column":12},"end":{"line":53,"column":21}},"4":{"start":{"line":55,"column":12},"end":{"line":55,"column":30}},"5":{"start":{"line":57,"column":12},"end":{"line":77,"column":13}},"6":{"start":{"line":58,"column":16},"end":{"line":58,"column":61}},"7":{"start":{"line":60,"column":16},"end":{"line":60,"column":54}},"8":{"start":{"line":62,"column":16},"end":{"line":66,"column":17}},"9":{"start":{"line":63,"column":20},"end":{"line":63,"column":48}},"10":{"start":{"line":65,"column":20},"end":{"line":65,"column":84}},"11":{"start":{"line":68,"column":16},"end":{"line":68,"column":49}},"12":{"start":{"line":70,"column":17},"end":{"line":77,"column":13}},"13":{"start":{"line":71,"column":16},"end":{"line":71,"column":70}},"14":{"start":{"line":73,"column":16},"end":{"line":73,"column":41}},"15":{"start":{"line":76,"column":16},"end":{"line":76,"column":32}},"16":{"start":{"line":96,"column":12},"end":{"line":101,"column":26}},"17":{"start":{"line":103,"column":12},"end":{"line":103,"column":46}},"18":{"start":{"line":105,"column":12},"end":{"line":133,"column":13}},"19":{"start":{"line":106,"column":16},"end":{"line":106,"column":64}},"20":{"start":{"line":108,"column":16},"end":{"line":108,"column":34}},"21":{"start":{"line":110,"column":16},"end":{"line":132,"column":17}},"22":{"start":{"line":111,"column":20},"end":{"line":124,"column":21}},"23":{"start":{"line":112,"column":24},"end":{"line":114,"column":25}},"24":{"start":{"line":113,"column":28},"end":{"line":113,"column":88}},"25":{"start":{"line":116,"column":25},"end":{"line":124,"column":21}},"26":{"start":{"line":117,"column":24},"end":{"line":117,"column":61}},"27":{"start":{"line":119,"column":24},"end":{"line":119,"column":68}},"28":{"start":{"line":121,"column":24},"end":{"line":123,"column":25}},"29":{"start":{"line":122,"column":28},"end":{"line":122,"column":84}},"30":{"start":{"line":126,"column":21},"end":{"line":132,"column":17}},"31":{"start":{"line":127,"column":20},"end":{"line":127,"column":57}},"32":{"start":{"line":129,"column":20},"end":{"line":129,"column":73}},"33":{"start":{"line":131,"column":20},"end":{"line":131,"column":49}},"34":{"start":{"line":135,"column":12},"end":{"line":135,"column":26}},"35":{"start":{"line":150,"column":12},"end":{"line":150,"column":47}},"36":{"start":{"line":165,"column":12},"end":{"line":165,"column":47}},"37":{"start":{"line":167,"column":12},"end":{"line":174,"column":13}},"38":{"start":{"line":168,"column":16},"end":{"line":173,"column":17}},"39":{"start":{"line":169,"column":20},"end":{"line":169,"column":47}},"40":{"start":{"line":172,"column":20},"end":{"line":172,"column":53}},"41":{"start":{"line":176,"column":12},"end":{"line":176,"column":29}},"42":{"start":{"line":189,"column":12},"end":{"line":204,"column":29}},"43":{"start":{"line":206,"column":12},"end":{"line":206,"column":25}},"44":{"start":{"line":208,"column":12},"end":{"line":208,"column":45}},"45":{"start":{"line":210,"column":12},"end":{"line":210,"column":29}},"46":{"start":{"line":212,"column":12},"end":{"line":212,"column":45}},"47":{"start":{"line":214,"column":12},"end":{"line":274,"column":13}},"48":{"start":{"line":215,"column":16},"end":{"line":215,"column":44}},"49":{"start":{"line":217,"column":16},"end":{"line":217,"column":54}},"50":{"start":{"line":219,"column":16},"end":{"line":270,"column":17}},"51":{"start":{"line":220,"column":20},"end":{"line":220,"column":38}},"52":{"start":{"line":222,"column":20},"end":{"line":222,"column":62}},"53":{"start":{"line":224,"column":20},"end":{"line":269,"column":21}},"54":{"start":{"line":225,"column":24},"end":{"line":230,"column":25}},"55":{"start":{"line":226,"column":28},"end":{"line":226,"column":49}},"56":{"start":{"line":229,"column":28},"end":{"line":229,"column":58}},"57":{"start":{"line":232,"column":25},"end":{"line":269,"column":21}},"58":{"start":{"line":233,"column":24},"end":{"line":233,"column":71}},"59":{"start":{"line":235,"column":24},"end":{"line":239,"column":25}},"60":{"start":{"line":236,"column":28},"end":{"line":236,"column":58}},"61":{"start":{"line":238,"column":28},"end":{"line":238,"column":34}},"62":{"start":{"line":241,"column":24},"end":{"line":241,"column":63}},"63":{"start":{"line":243,"column":24},"end":{"line":245,"column":25}},"64":{"start":{"line":244,"column":28},"end":{"line":244,"column":74}},"65":{"start":{"line":247,"column":24},"end":{"line":247,"column":62}},"66":{"start":{"line":249,"column":24},"end":{"line":268,"column":25}},"67":{"start":{"line":250,"column":28},"end":{"line":255,"column":29}},"68":{"start":{"line":251,"column":32},"end":{"line":251,"column":65}},"69":{"start":{"line":254,"column":32},"end":{"line":254,"column":71}},"70":{"start":{"line":257,"column":28},"end":{"line":257,"column":77}},"71":{"start":{"line":259,"column":29},"end":{"line":268,"column":25}},"72":{"start":{"line":260,"column":28},"end":{"line":260,"column":58}},"73":{"start":{"line":262,"column":28},"end":{"line":262,"column":34}},"74":{"start":{"line":265,"column":28},"end":{"line":265,"column":45}},"75":{"start":{"line":267,"column":28},"end":{"line":267,"column":34}},"76":{"start":{"line":273,"column":16},"end":{"line":273,"column":45}},"77":{"start":{"line":276,"column":12},"end":{"line":276,"column":48}},"78":{"start":{"line":278,"column":12},"end":{"line":278,"column":37}},"79":{"start":{"line":280,"column":12},"end":{"line":284,"column":13}},"80":{"start":{"line":281,"column":16},"end":{"line":281,"column":44}},"81":{"start":{"line":283,"column":16},"end":{"line":283,"column":66}},"82":{"start":{"line":286,"column":12},"end":{"line":312,"column":13}},"83":{"start":{"line":287,"column":16},"end":{"line":311,"column":18}},"84":{"start":{"line":290,"column":24},"end":{"line":291,"column":33}},"85":{"start":{"line":293,"column":24},"end":{"line":293,"column":49}},"86":{"start":{"line":295,"column":24},"end":{"line":309,"column":25}},"87":{"start":{"line":296,"column":28},"end":{"line":303,"column":30}},"88":{"start":{"line":299,"column":36},"end":{"line":299,"column":64}},"89":{"start":{"line":301,"column":36},"end":{"line":301,"column":67}},"90":{"start":{"line":305,"column":28},"end":{"line":305,"column":70}},"91":{"start":{"line":308,"column":28},"end":{"line":308,"column":40}},"92":{"start":{"line":314,"column":12},"end":{"line":314,"column":27}},"93":{"start":{"line":327,"column":12},"end":{"line":327,"column":55}},"94":{"start":{"line":329,"column":12},"end":{"line":334,"column":13}},"95":{"start":{"line":330,"column":16},"end":{"line":330,"column":43}},"96":{"start":{"line":332,"column":17},"end":{"line":334,"column":13}},"97":{"start":{"line":333,"column":16},"end":{"line":333,"column":31}},"98":{"start":{"line":336,"column":12},"end":{"line":336,"column":26}},"99":{"start":{"line":401,"column":0},"end":{"line":401,"column":50}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":62,"column":16}},{"start":{"line":62,"column":16},"end":{"line":62,"column":16}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":17},"end":{"line":70,"column":17}},{"start":{"line":70,"column":17},"end":{"line":70,"column":17}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":21},"end":{"line":103,"column":39}},{"start":{"line":103,"column":43},"end":{"line":103,"column":45}}]},"5":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"6":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":16}},{"start":{"line":110,"column":16},"end":{"line":110,"column":16}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":20},"end":{"line":111,"column":20}},{"start":{"line":111,"column":20},"end":{"line":111,"column":20}}]},"8":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":24},"end":{"line":112,"column":24}},{"start":{"line":112,"column":24},"end":{"line":112,"column":24}}]},"9":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":28},"end":{"line":112,"column":41}},{"start":{"line":112,"column":45},"end":{"line":112,"column":92}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":25},"end":{"line":116,"column":25}},{"start":{"line":116,"column":25},"end":{"line":116,"column":25}}]},"11":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":24},"end":{"line":121,"column":24}},{"start":{"line":121,"column":24},"end":{"line":121,"column":24}}]},"12":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":28},"end":{"line":121,"column":37}},{"start":{"line":121,"column":41},"end":{"line":121,"column":84}}]},"13":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":21},"end":{"line":126,"column":21}},{"start":{"line":126,"column":21},"end":{"line":126,"column":21}}]},"14":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":168,"column":16}},{"start":{"line":168,"column":16},"end":{"line":168,"column":16}}]},"16":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":12}},{"start":{"line":214,"column":12},"end":{"line":214,"column":12}}]},"17":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":20},"end":{"line":224,"column":20}},{"start":{"line":224,"column":20},"end":{"line":224,"column":20}}]},"18":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":24},"end":{"line":225,"column":24}},{"start":{"line":225,"column":24},"end":{"line":225,"column":24}}]},"19":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":25},"end":{"line":232,"column":25}},{"start":{"line":232,"column":25},"end":{"line":232,"column":25}}]},"20":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":24},"end":{"line":235,"column":24}},{"start":{"line":235,"column":24},"end":{"line":235,"column":24}}]},"21":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":24},"end":{"line":243,"column":24}},{"start":{"line":243,"column":24},"end":{"line":243,"column":24}}]},"22":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":24},"end":{"line":249,"column":24}},{"start":{"line":249,"column":24},"end":{"line":249,"column":24}}]},"23":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":28},"end":{"line":250,"column":28}},{"start":{"line":250,"column":28},"end":{"line":250,"column":28}}]},"24":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":46},"end":{"line":257,"column":70}},{"start":{"line":257,"column":74},"end":{"line":257,"column":76}}]},"25":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":29},"end":{"line":259,"column":29}},{"start":{"line":259,"column":29},"end":{"line":259,"column":29}}]},"26":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":12},"end":{"line":280,"column":12}},{"start":{"line":280,"column":12},"end":{"line":280,"column":12}}]},"27":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":12},"end":{"line":286,"column":12}},{"start":{"line":286,"column":12},"end":{"line":286,"column":12}}]},"28":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":24},"end":{"line":295,"column":24}},{"start":{"line":295,"column":24},"end":{"line":295,"column":24}}]},"29":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":12},"end":{"line":329,"column":12}},{"start":{"line":329,"column":12},"end":{"line":329,"column":12}}]},"30":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":17},"end":{"line":332,"column":17}},{"start":{"line":332,"column":17},"end":{"line":332,"column":17}}]}},"code":["(function () { YUI.add('aui-ace-autocomplete-templateprocessor', function (A, NAME) {","","/**"," * The ACE Editor TemplateProcessor base"," *"," * @module aui-ace-editor"," * @submodule aui-ace-autocomplete-templateprocessor"," */","","var Lang = A.Lang,","    AArray = A.Array,","    AObject = A.Object,","    Base = A.AceEditor.AutoCompleteBase,","","    MATCH_DIRECTIVES = 0,","    MATCH_VARIABLES = 1,","","    TOKEN_PUNCTUATOR_DOT = 1,","    TOKEN_UNRECOGNIZED = -1,","    TOKEN_VARIABLE = 0,","","    /**","     * A base class for TemplateProcessor.","     *","     * @class A.AceEditor.TemplateProcessor","     * @extends Base","     * @param {Object} config Object literal specifying widget configuration","     *     properties.","     * @constructor","     */","    TemplateProcessor = A.Base.create('aui-ace-autocomplete-templateprocessor', A.Base, [","], {","","        /**","         * Accepts match and depending on its type processes directives or","         * variables. In case of success, calls the provided success callback,","         * or the error callback otherwise.","         *","         * @method getResults","         * @param {Object} match The provided match. It should contain at least","         *     type and content properties","         * @param {Function} callbackSuccess The function to be called in case","         *     of success","         * @param {Function} callbackError The function to be called in case of","         *     error","         */","        getResults: function(match, callbackSuccess, callbackError) {","            var instance = this,","                content,","                host,","                matchDirectives,","                matches,","                type;","","            type = match.type;","","            if (type === MATCH_DIRECTIVES) {","                matchDirectives = instance.get('directives');","","                content = match.content.toLowerCase();","","                if (content.length) {","                    host = instance.get('host');","","                    matchDirectives = host._filterResults(content, matchDirectives);","                }","","                callbackSuccess(matchDirectives);","            }","            else if (type === MATCH_VARIABLES) {","                matches = instance._getVariableMatches(match.content);","","                callbackSuccess(matches);","            }","            else {","                callbackError();","            }","        },","","        /**","         * Formats the selected suggestion depending on the match type and","         * currently selected editor mode. The match type can be one of:","         * MATCH_DIRECTOVES or MATCH_VARIABLES. The selected editor mode can be","         * one of the following: INSERT or OVERWRITE. See {{#crossLink","         * \"AceEditor.AutoCompleteBase/fillMode:attribute\"}}{{/crossLink}}","         *","         * @method getSuggestion","         * @param {Object} match The provided match. It should contain at least","         *     type and content properties","         * @param {String} selectedSuggestion The selected suggestion from the","         *     list with suggestions","         * @return {String} The final suggestion which should be inserted to the","         *     editor","         */","        getSuggestion: function(match, selectedSuggestion) {","            var instance = this,","                fillMode,","                lastEntry,","                result,","                type,","                variables;","","            result = selectedSuggestion || '';","","            if (selectedSuggestion) {","                fillMode = instance.get('host').get('fillMode');","","                type = match.type;","","                if (fillMode === Base.FILL_MODE_INSERT) {","                    if (type === MATCH_DIRECTIVES) {","                        if (match.content && selectedSuggestion.indexOf(match.content) === 0) {","                            result = selectedSuggestion.substring(match.content.length);","                        }","                    }","                    else if (type === MATCH_VARIABLES) {","                        variables = match.content.split('.');","","                        lastEntry = variables[variables.length - 1];","","                        if (lastEntry && selectedSuggestion.indexOf(lastEntry) === 0) {","                            result = selectedSuggestion.substring(lastEntry.length);","                        }","                    }","                }","                else if (type === MATCH_VARIABLES) {","                    variables = match.content.split('.');","","                    variables[variables.length - 1] = selectedSuggestion;","","                    result = variables.join('.');","                }","            }","","            return result;","        },","","        /**","         * Checks if the the provided index is the last token in the list of","         * tokens.","         *","         * @method _isLastToken","         * @param {Number} index The index which should be checked","         * @param {Array} tokens The array with tokens","         * @protected","         * @return {Boolean} True if the provided index is the last token in the","         *     list","         */","        _isLastToken: function(index, tokens) {","            return index === tokens.length - 1;","        },","","        /**","         * Retrieves the type of a token. It can be one of these:","         * TOKEN_PUNCTUATOR_DOT = 1","         * TOKEN_UNRECOGNIZED = -1","         * TOKEN_VARIABLE = 0","         *","         * @method _getTokenType","         * @param {Number} token The type of the token","         * @protected","         * @return {Number} The token type","         */","        _getTokenType: function(token) {","            var tokenType = TOKEN_UNRECOGNIZED;","","            if (Lang.isString(token)) {","                if (token.length) {","                    tokenType = TOKEN_VARIABLE;","                }","                else {","                    tokenType = TOKEN_PUNCTUATOR_DOT;","                }","            }","","            return tokenType;","        },","","        /**","         * Scans the content and extracts variables.","         *","         * @method _getVariableMatches","         * @param {String} content The content from which variable matches will","         *     be extracted","         * @protected","         * @return {Array} List with variable matches","         */","        _getVariableMatches: function(content) {","            var instance = this,","                curVariableData,","                data,","                host,","                i,","                isLastToken,","                lastEntry,","                leftPartheseIndex,","                matches,","                results,","                resultsData,","                token,","                tokens,","                tokenType,","                variableData,","                variableType;","","            results = [];","","            data = instance.get('variables');","","            resultsData = {};","","            curVariableData = data.variables;","","            if (content) {","                tokens = content.split('.');","","                lastEntry = tokens[tokens.length - 1];","","                for (i = 0; i < tokens.length; i++) {","                    token = tokens[i];","","                    tokenType = instance._getTokenType(token);","","                    if (tokenType === TOKEN_PUNCTUATOR_DOT) {","                        if (i === 0) {","                            curVariableData = {};","                        }","                        else {","                            resultsData = curVariableData;","                        }","                    }","                    else if (tokenType === TOKEN_VARIABLE) {","                        isLastToken = instance._isLastToken(i, tokens);","","                        if (isLastToken) {","                            resultsData = curVariableData;","","                            break;","                        }","","                        leftPartheseIndex = token.indexOf('(');","","                        if (leftPartheseIndex !== -1) {","                            token = token.substring(0, leftPartheseIndex);","                        }","","                        variableData = curVariableData[token];","","                        if (variableData) {","                            if (i === 0) {","                                variableType = variableData.type;","                            }","                            else {","                                variableType = variableData.returnType;","                            }","","                            curVariableData = data.types[variableType] || {};","                        }","                        else if (isLastToken) {","                            resultsData = curVariableData;","","                            break;","                        }","                        else {","                            resultsData = {};","","                            break;","                        }","                    }","                }","            }","            else {","                resultsData = data.variables;","            }","","            results = AObject.keys(resultsData);","","            matches = results.sort();","","            if (lastEntry) {","                host = instance.get('host');","","                matches = host._filterResults(lastEntry, matches);","            }","","            if (matches.length) {","                matches = AArray.map(","                    matches,","                    function(item) {","                        var args,","                            data;","","                        data = resultsData[item];","","                        if (data.type === 'Method') {","                            args = AArray.map(","                                data.argumentTypes,","                                function(item) {","                                    var parts = item.split('.');","","                                    return parts[parts.length - 1];","                                }","                            );","","                            return item + '(' + args.join(', ') + ')';","                        }","                        else {","                            return item;","                        }","                    }","                );","            }","","            return matches;","        },","","        /**","         * Normalizes a regualr expression value. If the value is String, it","         * will be converted to an RegExp.","         *","         * @method _setRegexValue","         * @param {String|RegExp} value The provided regualr expression value","         * @protected","         * @return {RegExp} The final instance of RegExp object","         */","        _setRegexValue: function(value) {","            var result = A.AttributeCore.INVALID_VALUE;","","            if (Lang.isString(value)) {","                result = new RegExp(value);","            }","            else if (value instanceof RegExp) {","                result = value;","            }","","            return result;","        }","    }, {","","        /**","         * Static property which provides a string to identify the class.","         *","         * @property NAME","         * @type String","         * @static","         */","        NAME: 'aui-ace-autocomplete-templateprocessor',","","        /**","         * Static property provides a string to identify the namespace.","         *","         * @property NS","         * @type String","         * @static","         */","        NS: 'aui-ace-autocomplete-templateprocessor',","","        /**","         * Static property used to define the default attribute","         * configuration for the TemplateProcessor.","         *","         * @property ATTRS","         * @type Object","         * @static","         */","        ATTRS: {","","            /**","             * Contains an array of all possible directives for the","             * corresponding language.","             *","             * @attribute directives","             * @type Array","             */","            directives: {","                validator: Lang.isArray","            },","","            /**","             * The Editor in which the current instance is plugged.","             *","             * @attribute host","             * @type Object","             */","            host: {","                validator: Lang.isObject","            },","","            /**","             * Contains the supported variables for the corresponding language.","             *","             * @attribute variables","             * @type Object","             */","            variables: {","                validator: Lang.isObject","            }","        }","    });","","A.AceEditor.TemplateProcessor = TemplateProcessor;","","","}, '2.5.0', {\"requires\": [\"aui-ace-autocomplete-base\"]});","","}());"]};
}
var __cov_JT3YRo5gU_Kw2uUuTDYRTA = __coverage__['build/aui-ace-autocomplete-templateprocessor/aui-ace-autocomplete-templateprocessor.js'];
__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['1']++;YUI.add('aui-ace-autocomplete-templateprocessor',function(A,NAME){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['1']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['2']++;var Lang=A.Lang,AArray=A.Array,AObject=A.Object,Base=A.AceEditor.AutoCompleteBase,MATCH_DIRECTIVES=0,MATCH_VARIABLES=1,TOKEN_PUNCTUATOR_DOT=1,TOKEN_UNRECOGNIZED=-1,TOKEN_VARIABLE=0,TemplateProcessor=A.Base.create('aui-ace-autocomplete-templateprocessor',A.Base,[],{getResults:function(match,callbackSuccess,callbackError){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['2']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['3']++;var instance=this,content,host,matchDirectives,matches,type;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['4']++;type=match.type;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['5']++;if(type===MATCH_DIRECTIVES){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['1'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['6']++;matchDirectives=instance.get('directives');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['7']++;content=match.content.toLowerCase();__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['8']++;if(content.length){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['2'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['9']++;host=instance.get('host');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['10']++;matchDirectives=host._filterResults(content,matchDirectives);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['2'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['11']++;callbackSuccess(matchDirectives);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['1'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['12']++;if(type===MATCH_VARIABLES){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['3'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['13']++;matches=instance._getVariableMatches(match.content);__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['14']++;callbackSuccess(matches);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['3'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['15']++;callbackError();}}},getSuggestion:function(match,selectedSuggestion){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['3']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['16']++;var instance=this,fillMode,lastEntry,result,type,variables;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['17']++;result=(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['4'][0]++,selectedSuggestion)||(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['4'][1]++,'');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['18']++;if(selectedSuggestion){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['5'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['19']++;fillMode=instance.get('host').get('fillMode');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['20']++;type=match.type;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['21']++;if(fillMode===Base.FILL_MODE_INSERT){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['6'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['22']++;if(type===MATCH_DIRECTIVES){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['7'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['23']++;if((__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['9'][0]++,match.content)&&(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['9'][1]++,selectedSuggestion.indexOf(match.content)===0)){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['8'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['24']++;result=selectedSuggestion.substring(match.content.length);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['8'][1]++;}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['7'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['25']++;if(type===MATCH_VARIABLES){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['10'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['26']++;variables=match.content.split('.');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['27']++;lastEntry=variables[variables.length-1];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['28']++;if((__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['12'][0]++,lastEntry)&&(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['12'][1]++,selectedSuggestion.indexOf(lastEntry)===0)){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['11'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['29']++;result=selectedSuggestion.substring(lastEntry.length);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['11'][1]++;}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['10'][1]++;}}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['6'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['30']++;if(type===MATCH_VARIABLES){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['13'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['31']++;variables=match.content.split('.');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['32']++;variables[variables.length-1]=selectedSuggestion;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['33']++;result=variables.join('.');}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['13'][1]++;}}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['5'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['34']++;return result;},_isLastToken:function(index,tokens){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['4']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['35']++;return index===tokens.length-1;},_getTokenType:function(token){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['5']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['36']++;var tokenType=TOKEN_UNRECOGNIZED;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['37']++;if(Lang.isString(token)){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['14'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['38']++;if(token.length){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['15'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['39']++;tokenType=TOKEN_VARIABLE;}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['15'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['40']++;tokenType=TOKEN_PUNCTUATOR_DOT;}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['14'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['41']++;return tokenType;},_getVariableMatches:function(content){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['6']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['42']++;var instance=this,curVariableData,data,host,i,isLastToken,lastEntry,leftPartheseIndex,matches,results,resultsData,token,tokens,tokenType,variableData,variableType;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['43']++;results=[];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['44']++;data=instance.get('variables');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['45']++;resultsData={};__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['46']++;curVariableData=data.variables;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['47']++;if(content){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['16'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['48']++;tokens=content.split('.');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['49']++;lastEntry=tokens[tokens.length-1];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['50']++;for(i=0;i<tokens.length;i++){__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['51']++;token=tokens[i];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['52']++;tokenType=instance._getTokenType(token);__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['53']++;if(tokenType===TOKEN_PUNCTUATOR_DOT){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['17'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['54']++;if(i===0){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['18'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['55']++;curVariableData={};}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['18'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['56']++;resultsData=curVariableData;}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['17'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['57']++;if(tokenType===TOKEN_VARIABLE){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['19'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['58']++;isLastToken=instance._isLastToken(i,tokens);__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['59']++;if(isLastToken){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['20'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['60']++;resultsData=curVariableData;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['61']++;break;}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['20'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['62']++;leftPartheseIndex=token.indexOf('(');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['63']++;if(leftPartheseIndex!==-1){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['21'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['64']++;token=token.substring(0,leftPartheseIndex);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['21'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['65']++;variableData=curVariableData[token];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['66']++;if(variableData){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['22'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['67']++;if(i===0){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['23'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['68']++;variableType=variableData.type;}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['23'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['69']++;variableType=variableData.returnType;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['70']++;curVariableData=(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['24'][0]++,data.types[variableType])||(__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['24'][1]++,{});}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['22'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['71']++;if(isLastToken){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['25'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['72']++;resultsData=curVariableData;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['73']++;break;}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['25'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['74']++;resultsData={};__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['75']++;break;}}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['19'][1]++;}}}}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['16'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['76']++;resultsData=data.variables;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['77']++;results=AObject.keys(resultsData);__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['78']++;matches=results.sort();__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['79']++;if(lastEntry){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['26'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['80']++;host=instance.get('host');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['81']++;matches=host._filterResults(lastEntry,matches);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['26'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['82']++;if(matches.length){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['27'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['83']++;matches=AArray.map(matches,function(item){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['7']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['84']++;var args,data;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['85']++;data=resultsData[item];__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['86']++;if(data.type==='Method'){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['28'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['87']++;args=AArray.map(data.argumentTypes,function(item){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['8']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['88']++;var parts=item.split('.');__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['89']++;return parts[parts.length-1];});__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['90']++;return item+'('+args.join(', ')+')';}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['28'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['91']++;return item;}});}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['27'][1]++;}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['92']++;return matches;},_setRegexValue:function(value){__cov_JT3YRo5gU_Kw2uUuTDYRTA.f['9']++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['93']++;var result=A.AttributeCore.INVALID_VALUE;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['94']++;if(Lang.isString(value)){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['29'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['95']++;result=new RegExp(value);}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['29'][1]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['96']++;if(value instanceof RegExp){__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['30'][0]++;__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['97']++;result=value;}else{__cov_JT3YRo5gU_Kw2uUuTDYRTA.b['30'][1]++;}}__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['98']++;return result;}},{NAME:'aui-ace-autocomplete-templateprocessor',NS:'aui-ace-autocomplete-templateprocessor',ATTRS:{directives:{validator:Lang.isArray},host:{validator:Lang.isObject},variables:{validator:Lang.isObject}}});__cov_JT3YRo5gU_Kw2uUuTDYRTA.s['99']++;A.AceEditor.TemplateProcessor=TemplateProcessor;},'2.5.0',{'requires':['aui-ace-autocomplete-base']});
