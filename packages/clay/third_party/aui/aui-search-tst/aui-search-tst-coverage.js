if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-search-tst/aui-search-tst.js']) {
   __coverage__['build/aui-search-tst/aui-search-tst.js'] = {"path":"build/aui-search-tst/aui-search-tst.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":45}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":13},"end":{"line":58,"column":28}}},"3":{"name":"(anonymous_3)","line":77,"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":33}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":26}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":22},"end":{"line":103,"column":40}}},"6":{"name":"(anonymous_6)","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":39}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":27},"end":{"line":142,"column":51}}},"8":{"name":"(anonymous_8)","line":169,"loc":{"start":{"line":169,"column":17},"end":{"line":169,"column":45}}},"9":{"name":"(anonymous_9)","line":213,"loc":{"start":{"line":213,"column":23},"end":{"line":213,"column":63}}},"10":{"name":"(anonymous_10)","line":251,"loc":{"start":{"line":251,"column":17},"end":{"line":251,"column":45}}},"11":{"name":"(anonymous_11)","line":399,"loc":{"start":{"line":399,"column":21},"end":{"line":399,"column":32}}},"12":{"name":"(anonymous_12)","line":411,"loc":{"start":{"line":411,"column":27},"end":{"line":411,"column":43}}},"13":{"name":"(anonymous_13)","line":423,"loc":{"start":{"line":423,"column":28},"end":{"line":423,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":432,"column":45}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":18}},"3":{"start":{"line":21,"column":0},"end":{"line":277,"column":3}},"4":{"start":{"line":59,"column":12},"end":{"line":59,"column":32}},"5":{"start":{"line":61,"column":12},"end":{"line":61,"column":38}},"6":{"start":{"line":63,"column":12},"end":{"line":63,"column":55}},"7":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"8":{"start":{"line":66,"column":16},"end":{"line":66,"column":38}},"9":{"start":{"line":78,"column":12},"end":{"line":78,"column":32}},"10":{"start":{"line":80,"column":12},"end":{"line":80,"column":65}},"11":{"start":{"line":82,"column":12},"end":{"line":82,"column":64}},"12":{"start":{"line":91,"column":12},"end":{"line":91,"column":32}},"13":{"start":{"line":93,"column":12},"end":{"line":93,"column":34}},"14":{"start":{"line":104,"column":12},"end":{"line":104,"column":32}},"15":{"start":{"line":106,"column":12},"end":{"line":106,"column":29}},"16":{"start":{"line":108,"column":12},"end":{"line":108,"column":72}},"17":{"start":{"line":110,"column":12},"end":{"line":110,"column":27}},"18":{"start":{"line":121,"column":12},"end":{"line":121,"column":32}},"19":{"start":{"line":123,"column":12},"end":{"line":123,"column":29}},"20":{"start":{"line":125,"column":12},"end":{"line":125,"column":67}},"21":{"start":{"line":127,"column":12},"end":{"line":129,"column":13}},"22":{"start":{"line":128,"column":16},"end":{"line":128,"column":71}},"23":{"start":{"line":131,"column":12},"end":{"line":131,"column":27}},"24":{"start":{"line":143,"column":12},"end":{"line":143,"column":32}},"25":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"26":{"start":{"line":146,"column":16},"end":{"line":146,"column":23}},"27":{"start":{"line":149,"column":12},"end":{"line":149,"column":73}},"28":{"start":{"line":151,"column":12},"end":{"line":153,"column":13}},"29":{"start":{"line":152,"column":16},"end":{"line":152,"column":47}},"30":{"start":{"line":155,"column":12},"end":{"line":155,"column":67}},"31":{"start":{"line":157,"column":12},"end":{"line":157,"column":72}},"32":{"start":{"line":170,"column":12},"end":{"line":170,"column":32}},"33":{"start":{"line":172,"column":12},"end":{"line":172,"column":47}},"34":{"start":{"line":174,"column":12},"end":{"line":198,"column":13}},"35":{"start":{"line":175,"column":16},"end":{"line":188,"column":17}},"36":{"start":{"line":176,"column":20},"end":{"line":181,"column":21}},"37":{"start":{"line":177,"column":24},"end":{"line":177,"column":96}},"38":{"start":{"line":180,"column":24},"end":{"line":180,"column":47}},"39":{"start":{"line":183,"column":21},"end":{"line":188,"column":17}},"40":{"start":{"line":184,"column":20},"end":{"line":184,"column":100}},"41":{"start":{"line":187,"column":20},"end":{"line":187,"column":98}},"42":{"start":{"line":191,"column":16},"end":{"line":197,"column":18}},"43":{"start":{"line":200,"column":12},"end":{"line":200,"column":24}},"44":{"start":{"line":214,"column":12},"end":{"line":214,"column":32}},"45":{"start":{"line":216,"column":12},"end":{"line":239,"column":13}},"46":{"start":{"line":217,"column":16},"end":{"line":217,"column":54}},"47":{"start":{"line":219,"column":16},"end":{"line":219,"column":58}},"48":{"start":{"line":221,"column":16},"end":{"line":221,"column":65}},"49":{"start":{"line":223,"column":16},"end":{"line":225,"column":17}},"50":{"start":{"line":224,"column":20},"end":{"line":224,"column":93}},"51":{"start":{"line":227,"column":16},"end":{"line":234,"column":17}},"52":{"start":{"line":228,"column":20},"end":{"line":233,"column":21}},"53":{"start":{"line":229,"column":24},"end":{"line":229,"column":95}},"54":{"start":{"line":231,"column":25},"end":{"line":233,"column":21}},"55":{"start":{"line":232,"column":24},"end":{"line":232,"column":55}},"56":{"start":{"line":236,"column":16},"end":{"line":238,"column":17}},"57":{"start":{"line":237,"column":20},"end":{"line":237,"column":92}},"58":{"start":{"line":252,"column":12},"end":{"line":252,"column":32}},"59":{"start":{"line":254,"column":12},"end":{"line":254,"column":30}},"60":{"start":{"line":256,"column":12},"end":{"line":272,"column":13}},"61":{"start":{"line":257,"column":16},"end":{"line":257,"column":51}},"62":{"start":{"line":259,"column":16},"end":{"line":259,"column":58}},"63":{"start":{"line":261,"column":16},"end":{"line":271,"column":17}},"64":{"start":{"line":262,"column":20},"end":{"line":264,"column":21}},"65":{"start":{"line":263,"column":24},"end":{"line":263,"column":86}},"66":{"start":{"line":266,"column":21},"end":{"line":271,"column":17}},"67":{"start":{"line":267,"column":20},"end":{"line":267,"column":84}},"68":{"start":{"line":270,"column":20},"end":{"line":270,"column":83}},"69":{"start":{"line":274,"column":12},"end":{"line":274,"column":26}},"70":{"start":{"line":279,"column":0},"end":{"line":279,"column":37}},"71":{"start":{"line":281,"column":0},"end":{"line":281,"column":40}},"72":{"start":{"line":289,"column":0},"end":{"line":289,"column":18}},"73":{"start":{"line":300,"column":0},"end":{"line":427,"column":3}},"74":{"start":{"line":400,"column":12},"end":{"line":400,"column":38}},"75":{"start":{"line":412,"column":12},"end":{"line":412,"column":56}},"76":{"start":{"line":424,"column":12},"end":{"line":424,"column":62}},"77":{"start":{"line":429,"column":0},"end":{"line":429,"column":40}}},"branchMap":{"1":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"2":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":22},"end":{"line":82,"column":40}},{"start":{"line":82,"column":44},"end":{"line":82,"column":62}}]},"3":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"4":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":12}},{"start":{"line":145,"column":12},"end":{"line":145,"column":12}}]},"5":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":12}},{"start":{"line":151,"column":12},"end":{"line":151,"column":12}}]},"6":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":174,"column":12}},{"start":{"line":174,"column":12},"end":{"line":174,"column":12}}]},"7":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":16},"end":{"line":175,"column":16}},{"start":{"line":175,"column":16},"end":{"line":175,"column":16}}]},"8":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":20},"end":{"line":176,"column":20}},{"start":{"line":176,"column":20},"end":{"line":176,"column":20}}]},"9":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":21},"end":{"line":183,"column":21}},{"start":{"line":183,"column":21},"end":{"line":183,"column":21}}]},"10":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":216,"column":12}},{"start":{"line":216,"column":12},"end":{"line":216,"column":12}}]},"11":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":16},"end":{"line":223,"column":16}},{"start":{"line":223,"column":16},"end":{"line":223,"column":16}}]},"12":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":20},"end":{"line":223,"column":45}},{"start":{"line":223,"column":49},"end":{"line":223,"column":74}}]},"13":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":16},"end":{"line":227,"column":16}},{"start":{"line":227,"column":16},"end":{"line":227,"column":16}}]},"14":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":20},"end":{"line":227,"column":45}},{"start":{"line":227,"column":49},"end":{"line":227,"column":76}}]},"15":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":20},"end":{"line":228,"column":20}},{"start":{"line":228,"column":20},"end":{"line":228,"column":20}}]},"16":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":25},"end":{"line":231,"column":25}},{"start":{"line":231,"column":25},"end":{"line":231,"column":25}}]},"17":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":16}},{"start":{"line":236,"column":16},"end":{"line":236,"column":16}}]},"18":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":20},"end":{"line":236,"column":45}},{"start":{"line":236,"column":49},"end":{"line":236,"column":74}}]},"19":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":12},"end":{"line":256,"column":12}},{"start":{"line":256,"column":12},"end":{"line":256,"column":12}}]},"20":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":16},"end":{"line":261,"column":16}},{"start":{"line":261,"column":16},"end":{"line":261,"column":16}}]},"21":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":20},"end":{"line":262,"column":20}},{"start":{"line":262,"column":20},"end":{"line":262,"column":20}}]},"22":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":21},"end":{"line":266,"column":21}},{"start":{"line":266,"column":21},"end":{"line":266,"column":21}}]},"23":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":19},"end":{"line":424,"column":39}},{"start":{"line":424,"column":43},"end":{"line":424,"column":61}}]}},"code":["(function () { YUI.add('aui-search-tst', function (A, NAME) {","","/**"," * The Search Component"," *"," * @module aui-search"," * @submodule aui-search-ternary-search-tree"," */","","var Lang = A.Lang;","","/**"," * A base class for TernarySearchTree."," *"," * @class A.TernarySearchTree"," * @extends Base"," * @param {Object} config Object literal specifying widget configuration"," *     properties."," * @constructor"," */","var TernarySearchTree = A.Component.create({","","    /**","     * Static property provides a string to identify the class.","     *","     * @property NAME","     * @type String","     * @static","     */","    NAME: 'TernarySearchTree',","","    /**","     * Static property provides a string to identify the namespace.","     *","     * @property NS","     * @type String","     * @static","     */","    NS: 'ternarysearchtree',","","    /**","     * Static property used to define which component it extends.","     *","     * @property EXTENDS","     * @type Object","     * @static","     */","    EXTENDS: A.Base,","","    prototype: {","","        /**","         * Adds a word in the tree.","         *","         * @method add","         * @param word","         */","        add: function(word) {","            var instance = this;","","            var root = instance._root;","","            var node = instance._insert(root, word, 0);","","            if (!Lang.isValue(root)) {","                instance._root = node;","            }","        },","","        /**","         * Checks if the argument is part of the tree.","         *","         * @method contains","         * @param word","         * @return {Boolean}","         */","        contains: function(word) {","            var instance = this;","","            var node = instance._search(instance._root, word, 0);","","            return !!(Lang.isValue(node) && node.isEndOfWord());","        },","","        /**","         * Set tree's root to `null`.","         *","         * @method empty","         */","        empty: function() {","            var instance = this;","","            instance._root = null;","        },","","        /**","         * Checks if a pattern match.","         *","         * @method patternMatch","         * @param pattern","         * @return {Array}","         */","        patternMatch: function(pattern) {","            var instance = this;","","            var results = [];","","            instance._patternMatch(instance._root, pattern, 0, results);","","            return results;","        },","","        /**","         * Searches for a prefix in the tree.","         *","         * @method prefixSearch","         * @param prefix","         * @return {Array}","         */","        prefixSearch: function(prefix) {","            var instance = this;","","            var results = [];","","            var node = instance._search(instance._root, prefix, 0);","","            if (node) {","                instance._inOrderTraversal(node.get('child'), results);","            }","","            return results;","        },","","        /**","         * Traversals a tree.","         *","         * @method _inOrderTraversal","         * @param node","         * @param results","         * @protected","         */","        _inOrderTraversal: function(node, results) {","            var instance = this;","","            if (!Lang.isValue(node)) {","                return;","            }","","            instance._inOrderTraversal(node.get('smallerNode'), results);","","            if (node.isEndOfWord()) {","                results.push(node.get('word'));","            }","","            instance._inOrderTraversal(node.get('child'), results);","","            instance._inOrderTraversal(node.get('largerNode'), results);","        },","","        /**","         * Insert a node in the tree.","         *","         * @method _insert","         * @param node","         * @param word","         * @param index","         * @protected","         */","        _insert: function(node, word, index) {","            var instance = this;","","            var character = word.charAt(index);","","            if (Lang.isValue(node)) {","                if (character === node.get('character')) {","                    if (index + 1 < word.length) {","                        node.set('child', instance._insert(node.get('child'), word, index + 1));","                    }","                    else {","                        node.set('word', word);","                    }","                }","                else if (character < node.get('character')) {","                    node.set('smallerNode', instance._insert(node.get('smallerNode'), word, index));","                }","                else {","                    node.set('largerNode', instance._insert(node.get('largerNode'), word, index));","                }","            }","            else {","                node = instance._insert(","                    new A.TernarySearchNode({","                        character: character","                    }),","                    word,","                    index","                );","            }","","            return node;","        },","","        /**","         * Recursive search for a pattern in the tree.","         *","         * @method _patternMatch","         * @param node","         * @param pattern","         * @param index","         * @param results","         * @protected","         */","        _patternMatch: function(node, pattern, index, results) {","            var instance = this;","","            if (Lang.isValue(node)) {","                var character = pattern.charAt(index);","","                var nodeCharacter = node.get('character');","","                var patternChar = TernarySearchTree.PATTERN_CHAR;","","                if (character === patternChar || character < nodeCharacter) {","                    instance._patternMatch(node.get('smallerNode'), pattern, index, results);","                }","","                if (character === patternChar || character === nodeCharacter) {","                    if (index + 1 < pattern.length) {","                        instance._patternMatch(node.get('child'), pattern, index + 1, results);","                    }","                    else if (node.isEndOfWord()) {","                        results.push(node.get('word'));","                    }","                }","","                if (character === patternChar || character > nodeCharacter) {","                    instance._patternMatch(node.get('largerNode'), pattern, index, results);","                }","            }","        },","","        /**","         * Recursive search for a node in the tree.","         *","         * @method _search","         * @param node","         * @param word","         * @param index","         * @protected","         */","        _search: function(node, word, index) {","            var instance = this;","","            var result = node;","","            if (Lang.isValue(node)) {","                var character = word.charAt(index);","","                var nodeCharacter = node.get('character');","","                if (character === nodeCharacter) {","                    if (index + 1 < word.length) {","                        result = instance._search(node.get('child'), word, index + 1);","                    }","                }","                else if (character < nodeCharacter) {","                    result = instance._search(node.get('smallerNode'), word, index);","                }","                else {","                    result = instance._search(node.get('largerNode'), word, index);","                }","            }","","            return result;","        }","    }","});","","TernarySearchTree.PATTERN_CHAR = '?';","","A.TernarySearchTree = TernarySearchTree;","/**"," * The Search Component"," *"," * @module aui-search"," * @submodule aui-search-ternary-search-node"," */","","var Lang = A.Lang;","","/**"," * A base class for TernarySearchNode."," *"," * @class A.TernarySearchNode"," * @extends Base"," * @param {Object} config Object literal specifying widget configuration"," *     properties."," * @constructor"," */","var TernarySearchNode = A.Component.create({","","    /**","     * Static property provides a string to identify the class.","     *","     * @property NAME","     * @type String","     * @static","     */","    NAME: 'TernarySearchNode',","","    /**","     * Static property provides a string to identify the namespace.","     *","     * @property NS","     * @type String","     * @static","     */","    NS: 'ternarysearchnode',","","    /**","     * Static property used to define the default attribute","     * configuration for the `A.TernarySearchNode`.","     *","     * @property ATTRS","     * @type Object","     * @static","     */","    ATTRS: {","","        /**","         * String formed by a single letter.","         *","         * @attribute character","         * @type String","         * @writeOnce","         */","        character: {","            validator: '_validateCharacter',","            writeOnce: true","        },","","        /**","         * The child node in the tree.","         *","         * @attribute child","         */","        child: {","            validator: '_validateChild'","        },","","        /**","         * The larger node in the tree.","         *","         * @attribute largerNode","         * @type A.TernarySearchNode","         */","        largerNode: {","            validator: '_isInstanceOfNode'","        },","","        /**","         * The smaller node in the tree.","         *","         * @attribute smallerNode","         * @type A.TernarySearchNode","         */","        smallerNode: {","            validator: '_isInstanceOfNode'","        },","","        /**","         * String formed by a group of letters.","         *","         * @attribute word","         * @type String","         */","        word: {","            validator: Lang.isString","        }","    },","","    /**","     * Static property used to define which component it extends.","     *","     * @property EXTENDS","     * @type Object","     * @static","     */","    EXTENDS: A.Base,","","    prototype: {","","        /**","         * Converts the `word` attribute value to a `Boolean` and ensures a","         * `Boolean` type.","         *","         * @method isEndOfWord","         */","        isEndOfWord: function() {","            return !!this.get('word');","        },","","        /**","         * Checks if the argument is an instance of `A.TernarySearchNode`.","         *","         * @method _isInstanceOfNode","         * @param value","         * @protected","         * @return {Boolean}","         */","        _isInstanceOfNode: function(value) {","            return value instanceof A.TernarySearchNode;","        },","","        /**","         * Checks if the argument is a `String` and contains only one character.","         *","         * @method _validateCharacter","         * @param value","         * @protected","         * @return {Boolean}","         */","        _validateCharacter: function(value) {","            return Lang.isString(value) && value.length === 1;","        }","    }","});","","A.TernarySearchNode = TernarySearchNode;","","","}, '2.5.0', {\"requires\": [\"aui-component\"]});","","}());"]};
}
var __cov_RResFA6pVCyVo5ss79PWKQ = __coverage__['build/aui-search-tst/aui-search-tst.js'];
__cov_RResFA6pVCyVo5ss79PWKQ.s['1']++;YUI.add('aui-search-tst',function(A,NAME){__cov_RResFA6pVCyVo5ss79PWKQ.f['1']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['2']++;var Lang=A.Lang;__cov_RResFA6pVCyVo5ss79PWKQ.s['3']++;var TernarySearchTree=A.Component.create({NAME:'TernarySearchTree',NS:'ternarysearchtree',EXTENDS:A.Base,prototype:{add:function(word){__cov_RResFA6pVCyVo5ss79PWKQ.f['2']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['4']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['5']++;var root=instance._root;__cov_RResFA6pVCyVo5ss79PWKQ.s['6']++;var node=instance._insert(root,word,0);__cov_RResFA6pVCyVo5ss79PWKQ.s['7']++;if(!Lang.isValue(root)){__cov_RResFA6pVCyVo5ss79PWKQ.b['1'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['8']++;instance._root=node;}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['1'][1]++;}},contains:function(word){__cov_RResFA6pVCyVo5ss79PWKQ.f['3']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['9']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['10']++;var node=instance._search(instance._root,word,0);__cov_RResFA6pVCyVo5ss79PWKQ.s['11']++;return!!((__cov_RResFA6pVCyVo5ss79PWKQ.b['2'][0]++,Lang.isValue(node))&&(__cov_RResFA6pVCyVo5ss79PWKQ.b['2'][1]++,node.isEndOfWord()));},empty:function(){__cov_RResFA6pVCyVo5ss79PWKQ.f['4']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['12']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['13']++;instance._root=null;},patternMatch:function(pattern){__cov_RResFA6pVCyVo5ss79PWKQ.f['5']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['14']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['15']++;var results=[];__cov_RResFA6pVCyVo5ss79PWKQ.s['16']++;instance._patternMatch(instance._root,pattern,0,results);__cov_RResFA6pVCyVo5ss79PWKQ.s['17']++;return results;},prefixSearch:function(prefix){__cov_RResFA6pVCyVo5ss79PWKQ.f['6']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['18']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['19']++;var results=[];__cov_RResFA6pVCyVo5ss79PWKQ.s['20']++;var node=instance._search(instance._root,prefix,0);__cov_RResFA6pVCyVo5ss79PWKQ.s['21']++;if(node){__cov_RResFA6pVCyVo5ss79PWKQ.b['3'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['22']++;instance._inOrderTraversal(node.get('child'),results);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['3'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['23']++;return results;},_inOrderTraversal:function(node,results){__cov_RResFA6pVCyVo5ss79PWKQ.f['7']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['24']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['25']++;if(!Lang.isValue(node)){__cov_RResFA6pVCyVo5ss79PWKQ.b['4'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['26']++;return;}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['4'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['27']++;instance._inOrderTraversal(node.get('smallerNode'),results);__cov_RResFA6pVCyVo5ss79PWKQ.s['28']++;if(node.isEndOfWord()){__cov_RResFA6pVCyVo5ss79PWKQ.b['5'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['29']++;results.push(node.get('word'));}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['5'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['30']++;instance._inOrderTraversal(node.get('child'),results);__cov_RResFA6pVCyVo5ss79PWKQ.s['31']++;instance._inOrderTraversal(node.get('largerNode'),results);},_insert:function(node,word,index){__cov_RResFA6pVCyVo5ss79PWKQ.f['8']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['32']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['33']++;var character=word.charAt(index);__cov_RResFA6pVCyVo5ss79PWKQ.s['34']++;if(Lang.isValue(node)){__cov_RResFA6pVCyVo5ss79PWKQ.b['6'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['35']++;if(character===node.get('character')){__cov_RResFA6pVCyVo5ss79PWKQ.b['7'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['36']++;if(index+1<word.length){__cov_RResFA6pVCyVo5ss79PWKQ.b['8'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['37']++;node.set('child',instance._insert(node.get('child'),word,index+1));}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['8'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['38']++;node.set('word',word);}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['7'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['39']++;if(character<node.get('character')){__cov_RResFA6pVCyVo5ss79PWKQ.b['9'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['40']++;node.set('smallerNode',instance._insert(node.get('smallerNode'),word,index));}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['9'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['41']++;node.set('largerNode',instance._insert(node.get('largerNode'),word,index));}}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['6'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['42']++;node=instance._insert(new A.TernarySearchNode({character:character}),word,index);}__cov_RResFA6pVCyVo5ss79PWKQ.s['43']++;return node;},_patternMatch:function(node,pattern,index,results){__cov_RResFA6pVCyVo5ss79PWKQ.f['9']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['44']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['45']++;if(Lang.isValue(node)){__cov_RResFA6pVCyVo5ss79PWKQ.b['10'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['46']++;var character=pattern.charAt(index);__cov_RResFA6pVCyVo5ss79PWKQ.s['47']++;var nodeCharacter=node.get('character');__cov_RResFA6pVCyVo5ss79PWKQ.s['48']++;var patternChar=TernarySearchTree.PATTERN_CHAR;__cov_RResFA6pVCyVo5ss79PWKQ.s['49']++;if((__cov_RResFA6pVCyVo5ss79PWKQ.b['12'][0]++,character===patternChar)||(__cov_RResFA6pVCyVo5ss79PWKQ.b['12'][1]++,character<nodeCharacter)){__cov_RResFA6pVCyVo5ss79PWKQ.b['11'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['50']++;instance._patternMatch(node.get('smallerNode'),pattern,index,results);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['11'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['51']++;if((__cov_RResFA6pVCyVo5ss79PWKQ.b['14'][0]++,character===patternChar)||(__cov_RResFA6pVCyVo5ss79PWKQ.b['14'][1]++,character===nodeCharacter)){__cov_RResFA6pVCyVo5ss79PWKQ.b['13'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['52']++;if(index+1<pattern.length){__cov_RResFA6pVCyVo5ss79PWKQ.b['15'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['53']++;instance._patternMatch(node.get('child'),pattern,index+1,results);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['15'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['54']++;if(node.isEndOfWord()){__cov_RResFA6pVCyVo5ss79PWKQ.b['16'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['55']++;results.push(node.get('word'));}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['16'][1]++;}}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['13'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['56']++;if((__cov_RResFA6pVCyVo5ss79PWKQ.b['18'][0]++,character===patternChar)||(__cov_RResFA6pVCyVo5ss79PWKQ.b['18'][1]++,character>nodeCharacter)){__cov_RResFA6pVCyVo5ss79PWKQ.b['17'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['57']++;instance._patternMatch(node.get('largerNode'),pattern,index,results);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['17'][1]++;}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['10'][1]++;}},_search:function(node,word,index){__cov_RResFA6pVCyVo5ss79PWKQ.f['10']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['58']++;var instance=this;__cov_RResFA6pVCyVo5ss79PWKQ.s['59']++;var result=node;__cov_RResFA6pVCyVo5ss79PWKQ.s['60']++;if(Lang.isValue(node)){__cov_RResFA6pVCyVo5ss79PWKQ.b['19'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['61']++;var character=word.charAt(index);__cov_RResFA6pVCyVo5ss79PWKQ.s['62']++;var nodeCharacter=node.get('character');__cov_RResFA6pVCyVo5ss79PWKQ.s['63']++;if(character===nodeCharacter){__cov_RResFA6pVCyVo5ss79PWKQ.b['20'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['64']++;if(index+1<word.length){__cov_RResFA6pVCyVo5ss79PWKQ.b['21'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['65']++;result=instance._search(node.get('child'),word,index+1);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['21'][1]++;}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['20'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['66']++;if(character<nodeCharacter){__cov_RResFA6pVCyVo5ss79PWKQ.b['22'][0]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['67']++;result=instance._search(node.get('smallerNode'),word,index);}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['22'][1]++;__cov_RResFA6pVCyVo5ss79PWKQ.s['68']++;result=instance._search(node.get('largerNode'),word,index);}}}else{__cov_RResFA6pVCyVo5ss79PWKQ.b['19'][1]++;}__cov_RResFA6pVCyVo5ss79PWKQ.s['69']++;return result;}}});__cov_RResFA6pVCyVo5ss79PWKQ.s['70']++;TernarySearchTree.PATTERN_CHAR='?';__cov_RResFA6pVCyVo5ss79PWKQ.s['71']++;A.TernarySearchTree=TernarySearchTree;__cov_RResFA6pVCyVo5ss79PWKQ.s['72']++;var Lang=A.Lang;__cov_RResFA6pVCyVo5ss79PWKQ.s['73']++;var TernarySearchNode=A.Component.create({NAME:'TernarySearchNode',NS:'ternarysearchnode',ATTRS:{character:{validator:'_validateCharacter',writeOnce:true},child:{validator:'_validateChild'},largerNode:{validator:'_isInstanceOfNode'},smallerNode:{validator:'_isInstanceOfNode'},word:{validator:Lang.isString}},EXTENDS:A.Base,prototype:{isEndOfWord:function(){__cov_RResFA6pVCyVo5ss79PWKQ.f['11']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['74']++;return!!this.get('word');},_isInstanceOfNode:function(value){__cov_RResFA6pVCyVo5ss79PWKQ.f['12']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['75']++;return value instanceof A.TernarySearchNode;},_validateCharacter:function(value){__cov_RResFA6pVCyVo5ss79PWKQ.f['13']++;__cov_RResFA6pVCyVo5ss79PWKQ.s['76']++;return(__cov_RResFA6pVCyVo5ss79PWKQ.b['23'][0]++,Lang.isString(value))&&(__cov_RResFA6pVCyVo5ss79PWKQ.b['23'][1]++,value.length===1);}}});__cov_RResFA6pVCyVo5ss79PWKQ.s['77']++;A.TernarySearchNode=TernarySearchNode;},'2.5.0',{'requires':['aui-component']});
