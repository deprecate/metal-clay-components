if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/aui-live-search-deprecated/aui-live-search-deprecated.js']) {
   __coverage__['build/aui-live-search-deprecated/aui-live-search-deprecated.js'] = {"path":"build/aui-live-search-deprecated/aui-live-search-deprecated.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":57}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":29}}},"3":{"name":"(anonymous_3)","line":99,"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":34}}},"4":{"name":"(anonymous_4)","line":126,"loc":{"start":{"line":126,"column":19},"end":{"line":126,"column":34}}},"5":{"name":"(anonymous_5)","line":165,"loc":{"start":{"line":165,"column":23},"end":{"line":165,"column":35}}},"6":{"name":"(anonymous_6)","line":202,"loc":{"start":{"line":202,"column":19},"end":{"line":202,"column":34}}},"7":{"name":"(anonymous_7)","line":246,"loc":{"start":{"line":246,"column":21},"end":{"line":246,"column":32}}},"8":{"name":"(anonymous_8)","line":262,"loc":{"start":{"line":262,"column":16},"end":{"line":262,"column":27}}},"9":{"name":"(anonymous_9)","line":285,"loc":{"start":{"line":285,"column":17},"end":{"line":285,"column":28}}},"10":{"name":"(anonymous_10)","line":301,"loc":{"start":{"line":301,"column":16},"end":{"line":301,"column":32}}},"11":{"name":"(anonymous_11)","line":315,"loc":{"start":{"line":315,"column":26},"end":{"line":315,"column":51}}},"12":{"name":"(anonymous_12)","line":333,"loc":{"start":{"line":333,"column":22},"end":{"line":333,"column":33}}},"13":{"name":"(anonymous_13)","line":345,"loc":{"start":{"line":345,"column":16},"end":{"line":345,"column":50}}},"14":{"name":"(anonymous_14)","line":361,"loc":{"start":{"line":361,"column":16},"end":{"line":361,"column":32}}},"15":{"name":"(anonymous_15)","line":380,"loc":{"start":{"line":380,"column":33},"end":{"line":380,"column":49}}},"16":{"name":"(anonymous_16)","line":395,"loc":{"start":{"line":395,"column":22},"end":{"line":395,"column":38}}},"17":{"name":"(anonymous_17)","line":416,"loc":{"start":{"line":416,"column":23},"end":{"line":416,"column":39}}},"18":{"name":"(anonymous_18)","line":438,"loc":{"start":{"line":438,"column":25},"end":{"line":438,"column":41}}},"19":{"name":"(anonymous_19)","line":458,"loc":{"start":{"line":458,"column":25},"end":{"line":458,"column":59}}},"20":{"name":"(anonymous_20)","line":480,"loc":{"start":{"line":480,"column":25},"end":{"line":480,"column":41}}},"21":{"name":"(anonymous_21)","line":507,"loc":{"start":{"line":507,"column":21},"end":{"line":507,"column":37}}},"22":{"name":"(anonymous_22)","line":525,"loc":{"start":{"line":525,"column":19},"end":{"line":525,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":545,"column":51}},"2":{"start":{"line":10,"column":0},"end":{"line":36,"column":6}},"3":{"start":{"line":35,"column":8},"end":{"line":35,"column":41}},"4":{"start":{"line":63,"column":0},"end":{"line":540,"column":3}},"5":{"start":{"line":100,"column":16},"end":{"line":100,"column":35}},"6":{"start":{"line":127,"column":16},"end":{"line":127,"column":35}},"7":{"start":{"line":166,"column":16},"end":{"line":166,"column":45}},"8":{"start":{"line":203,"column":16},"end":{"line":203,"column":35}},"9":{"start":{"line":247,"column":12},"end":{"line":247,"column":32}},"10":{"start":{"line":249,"column":12},"end":{"line":249,"column":36}},"11":{"start":{"line":251,"column":12},"end":{"line":251,"column":105}},"12":{"start":{"line":253,"column":12},"end":{"line":253,"column":30}},"13":{"start":{"line":263,"column":12},"end":{"line":263,"column":32}},"14":{"start":{"line":265,"column":12},"end":{"line":265,"column":44}},"15":{"start":{"line":267,"column":12},"end":{"line":267,"column":62}},"16":{"start":{"line":269,"column":12},"end":{"line":269,"column":82}},"17":{"start":{"line":271,"column":12},"end":{"line":275,"column":14}},"18":{"start":{"line":286,"column":12},"end":{"line":286,"column":32}},"19":{"start":{"line":288,"column":12},"end":{"line":288,"column":44}},"20":{"start":{"line":290,"column":12},"end":{"line":290,"column":34}},"21":{"start":{"line":302,"column":12},"end":{"line":302,"column":32}},"22":{"start":{"line":304,"column":12},"end":{"line":304,"column":29}},"23":{"start":{"line":305,"column":12},"end":{"line":305,"column":44}},"24":{"start":{"line":306,"column":12},"end":{"line":306,"column":44}},"25":{"start":{"line":308,"column":12},"end":{"line":308,"column":35}},"26":{"start":{"line":309,"column":12},"end":{"line":309,"column":71}},"27":{"start":{"line":311,"column":12},"end":{"line":313,"column":14}},"28":{"start":{"line":315,"column":12},"end":{"line":323,"column":15}},"29":{"start":{"line":316,"column":16},"end":{"line":316,"column":45}},"30":{"start":{"line":318,"column":16},"end":{"line":322,"column":19}},"31":{"start":{"line":325,"column":12},"end":{"line":325,"column":27}},"32":{"start":{"line":334,"column":12},"end":{"line":334,"column":32}},"33":{"start":{"line":336,"column":12},"end":{"line":336,"column":33}},"34":{"start":{"line":338,"column":12},"end":{"line":338,"column":44}},"35":{"start":{"line":340,"column":12},"end":{"line":340,"column":28}},"36":{"start":{"line":342,"column":12},"end":{"line":342,"column":44}},"37":{"start":{"line":344,"column":12},"end":{"line":350,"column":14}},"38":{"start":{"line":346,"column":20},"end":{"line":346,"column":62}},"39":{"start":{"line":348,"column":20},"end":{"line":348,"column":66}},"40":{"start":{"line":352,"column":12},"end":{"line":352,"column":45}},"41":{"start":{"line":362,"column":12},"end":{"line":362,"column":32}},"42":{"start":{"line":364,"column":12},"end":{"line":369,"column":14}},"43":{"start":{"line":381,"column":12},"end":{"line":381,"column":32}},"44":{"start":{"line":383,"column":12},"end":{"line":385,"column":13}},"45":{"start":{"line":384,"column":16},"end":{"line":384,"column":54}},"46":{"start":{"line":396,"column":12},"end":{"line":396,"column":32}},"47":{"start":{"line":398,"column":12},"end":{"line":398,"column":51}},"48":{"start":{"line":400,"column":12},"end":{"line":400,"column":49}},"49":{"start":{"line":402,"column":12},"end":{"line":402,"column":70}},"50":{"start":{"line":404,"column":12},"end":{"line":404,"column":67}},"51":{"start":{"line":406,"column":12},"end":{"line":406,"column":41}},"52":{"start":{"line":417,"column":12},"end":{"line":417,"column":32}},"53":{"start":{"line":419,"column":12},"end":{"line":419,"column":66}},"54":{"start":{"line":421,"column":12},"end":{"line":427,"column":14}},"55":{"start":{"line":439,"column":12},"end":{"line":439,"column":32}},"56":{"start":{"line":441,"column":12},"end":{"line":443,"column":13}},"57":{"start":{"line":442,"column":16},"end":{"line":442,"column":50}},"58":{"start":{"line":445,"column":12},"end":{"line":445,"column":25}},"59":{"start":{"line":459,"column":12},"end":{"line":459,"column":32}},"60":{"start":{"line":461,"column":12},"end":{"line":461,"column":30}},"61":{"start":{"line":463,"column":12},"end":{"line":465,"column":13}},"62":{"start":{"line":464,"column":16},"end":{"line":464,"column":30}},"63":{"start":{"line":467,"column":12},"end":{"line":467,"column":59}},"64":{"start":{"line":481,"column":12},"end":{"line":481,"column":32}},"65":{"start":{"line":483,"column":12},"end":{"line":483,"column":55}},"66":{"start":{"line":486,"column":12},"end":{"line":486,"column":48}},"67":{"start":{"line":489,"column":12},"end":{"line":489,"column":56}},"68":{"start":{"line":492,"column":12},"end":{"line":492,"column":47}},"69":{"start":{"line":494,"column":12},"end":{"line":494,"column":53}},"70":{"start":{"line":496,"column":12},"end":{"line":496,"column":25}},"71":{"start":{"line":508,"column":12},"end":{"line":508,"column":32}},"72":{"start":{"line":510,"column":12},"end":{"line":512,"column":13}},"73":{"start":{"line":511,"column":16},"end":{"line":511,"column":29}},"74":{"start":{"line":514,"column":12},"end":{"line":514,"column":44}},"75":{"start":{"line":526,"column":12},"end":{"line":526,"column":32}},"76":{"start":{"line":528,"column":12},"end":{"line":535,"column":13}},"77":{"start":{"line":529,"column":16},"end":{"line":534,"column":17}},"78":{"start":{"line":530,"column":20},"end":{"line":530,"column":33}},"79":{"start":{"line":533,"column":20},"end":{"line":533,"column":44}},"80":{"start":{"line":537,"column":12},"end":{"line":537,"column":21}},"81":{"start":{"line":542,"column":0},"end":{"line":542,"column":26}}},"branchMap":{"1":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":12},"end":{"line":383,"column":12}},{"start":{"line":383,"column":12},"end":{"line":383,"column":12}}]},"2":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":12},"end":{"line":441,"column":12}},{"start":{"line":441,"column":12},"end":{"line":441,"column":12}}]},"3":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":12},"end":{"line":463,"column":12}},{"start":{"line":463,"column":12},"end":{"line":463,"column":12}}]},"4":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":12},"end":{"line":510,"column":12}},{"start":{"line":510,"column":12},"end":{"line":510,"column":12}}]},"5":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":12},"end":{"line":528,"column":12}},{"start":{"line":528,"column":12},"end":{"line":528,"column":12}}]},"6":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":16},"end":{"line":529,"column":16}},{"start":{"line":529,"column":16},"end":{"line":529,"column":16}}]}},"code":["(function () { YUI.add('aui-live-search-deprecated', function (A, NAME) {","","/**"," * The LiveSearch Utility allow real-time filtering for DOM elements based on"," * a input query."," *"," * @module aui-live-search"," */","","var L = A.Lang,","    isString = L.isString,","    isObject = L.isObject,","    isFunction = L.isFunction,","    isValue = L.isValue,","    trim = L.trim,","","    BLANK = '',","    DATA = 'data',","    DELAY = 'delay',","    HIDE = 'hide',","    INDEX = 'index',","    INPUT = 'input',","    LIVE_SEARCH = 'live-search',","    MATCH_REGEX = 'matchRegex',","    NODES = 'nodes',","    SEARCH_VALUE = 'searchValue',","    SHOW = 'show',","    STAR = '*',","","    UI_SRC = A.Widget.UI_SRC,","","    ENTER = 'ENTER',","","    isNodeList = function(v) {","        return (v instanceof A.NodeList);","    };","","/**"," * <p><img src=\"assets/images/aui-live-search/main.png\"/></p>"," *"," * A base class for LiveSearch, providing:"," * <ul>"," *    <li>Real-time filtering for DOM elements based on a input query</li>"," * </ul>"," *"," * Quick Example:<br/>"," *"," * <pre><code>var instance = new A.LiveSearch({"," *\tinput: '#input',"," *\tnodes: '#search .entry'"," * });"," * </code></pre>"," *"," * Check the list of <a href=\"LiveSearch.html#configattributes\">Configuration Attributes</a> available for"," * LiveSearch."," *"," * @param config {Object} Object literal specifying widget configuration properties."," *"," * @class LiveSearch"," * @constructor"," * @extends Base"," */","var LiveSearch = A.Component.create({","    /**","     * Static property provides a string to identify the class.","     *","     * @property LiveSearch.NAME","     * @type String","     * @static","     */","    NAME: LIVE_SEARCH,","","    /**","     * Static property used to define the default attribute","     * configuration for the LiveSearch.","     *","     * @property LiveSearch.ATTRS","     * @type Object","     * @static","     */","    ATTRS: {","        /**","         * <p>Function to extract the content from the node for the indexing. The","         * default uses the <code>node.html()</code>. In case if you need to","         * index the id of the nodes, here goes one example:</p>","         *","         * Example indexing the id of the node instead of the HTML:","         *","         * <pre><code>function(node) {","         *  return node.attr('id');","         * }","         * </code></pre>","         *","         * @attribute data","         * @default function(node) { return node.html(); }","         * @type function","         */","        data: {","            value: function(node) {","                return node.html();","            },","            validator: isFunction","        },","","        /**","         * Number of milliseconds the filter will be applied to the node list","         * after the user stop typing.","         *","         * @attribute delay","         * @default 250","         * @type Number","         */","        delay: {","            value: 250","        },","","        /**","         * Function to be executed to hide the node when the data of that node","         * not matches with the filter.","         *","         * @attribute hide","         * @default function(node) { return node.hide(); }","         * @type function","         */","        hide: {","            value: function(node) {","                return node.hide();","            },","            validator: isFunction","        },","","        /**","         * Index for the nodes content.","         *","         * @attribute index","         * @default []","         * @type Array","         */","        index: {","            value: [],","            validator: isObject","        },","","        /**","         * The <code>value</code> of this input node is used to filter the","         * results.","         *","         * @attribute input","         * @type Node | String","         */","        input: {","            setter: A.one","        },","","        /**","         * The input <code>value</code> need to matches with this RegExp to be","         * accept as a filter (i.e., in order to accept only digits you","         * could use /\\d+/g).","         *","         * @attribute matchRegex","         * @default (.)*","         * @type RegExp","         */","        matchRegex: {","            validator: function(v) {","                return (v instanceof RegExp);","            },","            value: /(.)*/g","        },","","        /**","         * Nodes to be indexed for the filtering.","         *","         * @attribute nodes","         * @type Node | NodeList","         */","        nodes: {","            setter: '_setNodes'","        },","","        /**","         * The text value to search for","         *","         * @attribute searchValue","         * @type String","         */","        searchValue: {","            getter: '_getSearchValue',","            setter: String,","            value: ''","        },","","        /**","         * Function to be executed to show the node when the data of that node","         * matches with the filter.","         *","         * @attribute show","         * @default function(node) { return node.show(); }","         * @type function","         */","        show: {","            value: function(node) {","                return node.show();","            },","            validator: isFunction","        }","    },","","    EXTENDS: A.Base,","","    prototype: {","        /**","         * Stores the normalized query value given from","         * <a href=\"LiveSearch.html#config__normalizeQuery\">_normalizeQuery</a>.","         *","         * @property normalizedQuery","         * @type String","         * @protected","         */","        normalizedQuery: BLANK,","","        /**","         * Stores the query value.","         *","         * @property query","         * @type String","         * @protected","         */","        query: BLANK,","","        /**","         * Handles the <a href=\"YUI.html#method_later\">later</a> Object.","         *","         * @property timer","         * @type Object","         * @protected","         */","        timer: null,","","        /**","         * Construction logic executed during LiveSearch instantiation. Lifecycle.","         *","         * @method initializer","         * @protected","         */","        initializer: function() {","            var instance = this;","","            instance.refreshIndex();","","            instance._fireSearchTask = A.debounce(instance._fireSearchFn, instance.get(DELAY), instance);","","            instance.bindUI();","        },","","        /**","         * Bind the events on the LiveSearch UI. Lifecycle.","         *","         * @method bindUI","         * @protected","         */","        bindUI: function() {","            var instance = this;","","            var input = instance.get(INPUT);","","            input.on('keyup', instance._inputKeyUp, instance);","","            instance.after('searchValueChange', instance._afterSearchValueChange);","","            instance.publish(","                'search', {","                    defaultFn: instance._defSearchFn","                }","            );","        },","","        /**","         * Destructor lifecycle implementation for the LiveSearch class.","         * Purges events attached to the node (and all child nodes).","         *","         * @method destroy","         * @protected","         */","        destroy: function() {","            var instance = this;","","            var input = instance.get(INPUT);","","            input.detach('keyup');","        },","","        /**","         * Filter the <a href=\"LiveSearch.html#config_nodes\">nodes</a> based on","         * the input value.","         *","         * @method filter","         * @param {String} query Query to filter results","         * @return {Array} Matched results.","         */","        filter: function(query) {","            var instance = this;","","            var results = [];","            var nodes = instance.get(NODES);","            var index = instance.get(INDEX);","","            instance.query = query;","            instance.normalizedQuery = instance._normalizeQuery(query);","","            var regex = new RegExp(","                instance.normalizedQuery","            );","","            A.each(index, function(content, index) {","                var node = nodes.item(index);","","                results.push({","                    content: content,","                    match: regex.test(content),","                    node: node","                });","            });","","            return results;","        },","","        /**","         * Refreshes the <a href=\"LiveSearch.html#config_index\">index</a>.","         *","         * @method refreshIndex","         */","        refreshIndex: function() {","            var instance = this;","","            var indexBuffer = [];","","            var nodes = instance.get(NODES);","","            nodes.refresh();","","            var dataFn = instance.get(DATA);","","            nodes.each(","                function(item, index, collection) {","                    var content = dataFn.call(instance, item);","","                    indexBuffer.push(trim(content).toLowerCase());","                }","            );","","            instance.set(INDEX, indexBuffer);","        },","","        /**","         * Searches for the user supplied value.","         *","         * @method search","         * @param {String|Number} value The text to search for","         */","        search: function(value) {","            var instance = this;","","            return instance.set(","                SEARCH_VALUE,","                value, {","                    SRC: UI_SRC","                }","            );","        },","","        /**","         * Fires after the value of the","         * <a href=\"LiveSearch.html#config_searchValue\">searchValue</a> attribute changes.","         *","         * @method _afterSearchValueChange","         * @param {EventFacade} event","         * @protected","         */","        _afterSearchValueChange: function(event) {","            var instance = this;","","            if (event.SRC == UI_SRC) {","                instance.get(INPUT).val(event.newVal);","            }","        },","","        /**","         * Default method that handles the search event.","         *","         * @method _defSearchFn","         * @param {EventFacade} event search event facade","         * @protected","         */","        _defSearchFn: function(event) {","            var instance = this;","","            var value = instance.get(SEARCH_VALUE);","","            var results = instance.filter(value);","","            A.Array.each(results, instance._iterateResults, instance);","","            var liveSearch = A.namespace.call(event, 'liveSearch');","","            liveSearch.results = results;","        },","","        /**","         * Implementation for the debounced task to fire the search event.","         *","         * @method search","         * @param {EventFacade} event the input key event object","         * @protected","         */","        _fireSearchFn: function(event) {","            var instance = this;","","            instance.set(SEARCH_VALUE, event.currentTarget.val());","","            instance.fire(","                'search', {","                    liveSearch: {","                        inputEvent: event","                    }","                }","            );","        },","","        /**","         * Getter method for the","         * <a href=\"LiveSearch.html#config_searchValue\">searchValue</a> attribute.","         *","         * @method _getSearchValue","         * @param {String} value","         * @protected","         */","        _getSearchValue: function(value) {","            var instance = this;","","            if (!isValue(value)) {","                value = instance.get(INPUT).val();","            }","","            return value;","        },","","        /**","         * Iterator for the result set that determines","         * whether to show or hide the result nodes.","         *","         * @method _iterateResults","         * @param {Object} item The current result item","         * @param {Number} index The current index of the result collection","         * @param {Array} result  The results array being iterated","         * @protected","         */","        _iterateResults: function(item, index, collection) {","            var instance = this;","","            var fnType = HIDE;","","            if (item.match) {","                fnType = SHOW;","            }","","            instance.get(fnType).call(instance, item.node);","        },","","        /**","         * Normalize the input query. With <code>trim</code>,","         * <code>matchRegex</code> and replace '*' to '' (on a regex empty match","         * with everything like *).","         *","         * @method _normalizeQuery","         * @param {String} query Query to filter results","         * @protected","         * @return {String}","         */","        _normalizeQuery: function(query) {","            var instance = this;","","            var matchRegex = instance.get(MATCH_REGEX);","","            // trim the user query and lowercase it","            query = L.trim(query.toLowerCase());","","            // match with the matchRegex","            query = query.match(matchRegex).join(BLANK);","","            // replace on the query '*' to '', on a regex empty match with everything like *","            query = query.replace(STAR, BLANK);","","            query = A.Lang.String.escapeRegEx(query);","","            return query;","        },","","        /**","         * Fires the keyup event on","         * <a href=\"LiveSearch.html#config_input\">input</a>.","         *","         * @method _inputKeyUp","         * @param {EventFacade} event keyup event facade","         * @protected","         */","        _inputKeyUp: function(event) {","            var instance = this;","","            if (event.isKey(ENTER)) {","                event.halt();","            }","","            instance._fireSearchTask(event);","        },","","        /**","         * Setter for <a href=\"LiveSearch.html#config_nodes\">nodes</a>.","         *","         * @method _setNodes","         * @param {Node | NodeList | String} v","         * @protected","         * @return {Node | NodeList | String}","         */","        _setNodes: function(v) {","            var instance = this;","","            if (!isNodeList(v)) {","                if (isString(v)) {","                    v = A.all(v);","                }","                else {","                    v = new A.NodeList([v]);","                }","            }","","            return v;","        }","    }","});","","A.LiveSearch = LiveSearch;","","","}, '2.5.0', {\"requires\": [\"aui-base-deprecated\"]});","","}());"]};
}
var __cov_yt6n$u1o3dOQwJiGdBZ_Xg = __coverage__['build/aui-live-search-deprecated/aui-live-search-deprecated.js'];
__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['1']++;YUI.add('aui-live-search-deprecated',function(A,NAME){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['1']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['2']++;var L=A.Lang,isString=L.isString,isObject=L.isObject,isFunction=L.isFunction,isValue=L.isValue,trim=L.trim,BLANK='',DATA='data',DELAY='delay',HIDE='hide',INDEX='index',INPUT='input',LIVE_SEARCH='live-search',MATCH_REGEX='matchRegex',NODES='nodes',SEARCH_VALUE='searchValue',SHOW='show',STAR='*',UI_SRC=A.Widget.UI_SRC,ENTER='ENTER',isNodeList=function(v){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['2']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['3']++;return v instanceof A.NodeList;};__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['4']++;var LiveSearch=A.Component.create({NAME:LIVE_SEARCH,ATTRS:{data:{value:function(node){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['3']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['5']++;return node.html();},validator:isFunction},delay:{value:250},hide:{value:function(node){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['4']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['6']++;return node.hide();},validator:isFunction},index:{value:[],validator:isObject},input:{setter:A.one},matchRegex:{validator:function(v){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['5']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['7']++;return v instanceof RegExp;},value:/(.)*/g},nodes:{setter:'_setNodes'},searchValue:{getter:'_getSearchValue',setter:String,value:''},show:{value:function(node){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['6']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['8']++;return node.show();},validator:isFunction}},EXTENDS:A.Base,prototype:{normalizedQuery:BLANK,query:BLANK,timer:null,initializer:function(){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['7']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['9']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['10']++;instance.refreshIndex();__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['11']++;instance._fireSearchTask=A.debounce(instance._fireSearchFn,instance.get(DELAY),instance);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['12']++;instance.bindUI();},bindUI:function(){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['8']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['13']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['14']++;var input=instance.get(INPUT);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['15']++;input.on('keyup',instance._inputKeyUp,instance);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['16']++;instance.after('searchValueChange',instance._afterSearchValueChange);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['17']++;instance.publish('search',{defaultFn:instance._defSearchFn});},destroy:function(){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['9']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['18']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['19']++;var input=instance.get(INPUT);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['20']++;input.detach('keyup');},filter:function(query){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['10']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['21']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['22']++;var results=[];__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['23']++;var nodes=instance.get(NODES);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['24']++;var index=instance.get(INDEX);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['25']++;instance.query=query;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['26']++;instance.normalizedQuery=instance._normalizeQuery(query);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['27']++;var regex=new RegExp(instance.normalizedQuery);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['28']++;A.each(index,function(content,index){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['11']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['29']++;var node=nodes.item(index);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['30']++;results.push({content:content,match:regex.test(content),node:node});});__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['31']++;return results;},refreshIndex:function(){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['12']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['32']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['33']++;var indexBuffer=[];__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['34']++;var nodes=instance.get(NODES);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['35']++;nodes.refresh();__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['36']++;var dataFn=instance.get(DATA);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['37']++;nodes.each(function(item,index,collection){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['13']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['38']++;var content=dataFn.call(instance,item);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['39']++;indexBuffer.push(trim(content).toLowerCase());});__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['40']++;instance.set(INDEX,indexBuffer);},search:function(value){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['14']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['41']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['42']++;return instance.set(SEARCH_VALUE,value,{SRC:UI_SRC});},_afterSearchValueChange:function(event){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['15']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['43']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['44']++;if(event.SRC==UI_SRC){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['1'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['45']++;instance.get(INPUT).val(event.newVal);}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['1'][1]++;}},_defSearchFn:function(event){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['16']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['46']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['47']++;var value=instance.get(SEARCH_VALUE);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['48']++;var results=instance.filter(value);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['49']++;A.Array.each(results,instance._iterateResults,instance);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['50']++;var liveSearch=A.namespace.call(event,'liveSearch');__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['51']++;liveSearch.results=results;},_fireSearchFn:function(event){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['17']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['52']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['53']++;instance.set(SEARCH_VALUE,event.currentTarget.val());__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['54']++;instance.fire('search',{liveSearch:{inputEvent:event}});},_getSearchValue:function(value){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['18']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['55']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['56']++;if(!isValue(value)){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['2'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['57']++;value=instance.get(INPUT).val();}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['2'][1]++;}__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['58']++;return value;},_iterateResults:function(item,index,collection){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['19']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['59']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['60']++;var fnType=HIDE;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['61']++;if(item.match){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['3'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['62']++;fnType=SHOW;}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['3'][1]++;}__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['63']++;instance.get(fnType).call(instance,item.node);},_normalizeQuery:function(query){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['20']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['64']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['65']++;var matchRegex=instance.get(MATCH_REGEX);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['66']++;query=L.trim(query.toLowerCase());__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['67']++;query=query.match(matchRegex).join(BLANK);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['68']++;query=query.replace(STAR,BLANK);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['69']++;query=A.Lang.String.escapeRegEx(query);__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['70']++;return query;},_inputKeyUp:function(event){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['21']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['71']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['72']++;if(event.isKey(ENTER)){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['4'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['73']++;event.halt();}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['4'][1]++;}__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['74']++;instance._fireSearchTask(event);},_setNodes:function(v){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.f['22']++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['75']++;var instance=this;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['76']++;if(!isNodeList(v)){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['5'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['77']++;if(isString(v)){__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['6'][0]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['78']++;v=A.all(v);}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['6'][1]++;__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['79']++;v=new A.NodeList([v]);}}else{__cov_yt6n$u1o3dOQwJiGdBZ_Xg.b['5'][1]++;}__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['80']++;return v;}}});__cov_yt6n$u1o3dOQwJiGdBZ_Xg.s['81']++;A.LiveSearch=LiveSearch;},'2.5.0',{'requires':['aui-base-deprecated']});
