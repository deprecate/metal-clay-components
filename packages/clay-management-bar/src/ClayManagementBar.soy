{namespace ClayManagementBar}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? checkboxState: string}
	{@param? filterItems: list<?>}
	{@param? handleCheckboxChanged_: any}
	{@param? id: string}
	{@param? selectable: bool}
	{@param? viewTypes: list<?>}

	{let $navAttributes kind="attributes"}
		class="management-bar management-bar-light navbar navbar-expand-md"
		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$navAttributes}>
		<div class="container">
			<ul class="navbar-nav">
				{if $selectable}
					<li class="nav-item">
						{call ClayCheckbox.render}
							{param checked: $checkboxState == 'checked' /}
							{param events: ['change': $handleCheckboxChanged_] /}
							{param hideLabel: true /}
							{param indeterminate: $checkboxState == 'indeterminate' /}
							{param label: 'Select All' /}
						{/call}
					</li>
				{/if}

				{if $filterItems}
					<li class="dropdown nav-item">
						{call ClayDropdown.render}
							{param items: $filterItems /}
							{param label: 'Filter and Order' /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link navbar-breakpoint-down-d-none' /}
						{/call}
					</li>
				{/if}

				<li class="nav-item">
					{call ClayButton.render}
						{param elementClasses: 'nav-link nav-link-monospaced order-arrow-down-active' /}
						{param icon: [
							'alignment': 'left',
							'spritemap': $spritemap,
							'symbol': 'order-arrow'
						] /}
						{param style: 'unstyled' /}
					{/call}
				</li>
			</ul>

			<ul class="navbar-nav">
				{if $viewTypes}
					<li class="dropdown nav-item">
						{call ClayDropdown.render}
							{param icon kind="text"}
								{foreach $viewType in $viewTypes}
									{if $viewType.active}
										{$viewType.indicatorSymbol}
									{/if}
								{/foreach}
							{/param}
							{param indicatorsPosition: 'left' /}
							{param items: $viewTypes /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link nav-link-monospaced' /}
						{/call}
					</li>
				{/if}

				<li class="nav-item">
					<button class="btn btn-primary nav-btn nav-btn-monospaced navbar-breakpoint-down-d-none" type="button">
						<svg aria-hidden="true" class="lexicon-icon lexicon-icon-plus">
							<use xlink:href="/vendor/lexicon/icons.svg#plus" />
						</svg>
					</button>
				</li>
			</ul>
		</div>
	</nav>
{/template}