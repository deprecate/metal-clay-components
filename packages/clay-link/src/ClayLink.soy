{namespace ClayLink}

/**
 * This renders an anchor element.
 */
{template .render}
	{@param? ariaExpanded: bool}
	{@param? ariaLabel: string}
	{@param? buttonStyle: string}
	{@param? download: string}
	{@param? elementClasses: string}
	{@param? href: string}
	{@param? icon: [
		alignment: string,
		spritemap: string,
		symbol: string
	]}
	{@param? id: string}
	{@param? label: html|string}
	{@param? style: string}
	{@param? target: string}

	{let $attributes kind="attributes"}
		{if $ariaLabel}
			aria-label="{$ariaLabel}"
		{/if}

		{if $ariaExpanded}
			aria-expanded="true"
		{elseif $ariaExpanded == false}
			aria-expanded="false"
		{/if}

		{let $classes kind="text"}
			{if $buttonStyle}
				btn btn-{$buttonStyle}
			{elseif $style}
				link-{$style}
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		{/let}

		{if $classes}
			class="{$classes}"
		{/if}

		{if $download}
			download="{$download}"
		{/if}

		{if $href}
			href="{$href}"
		{/if}

		{if $id}
			id="{$id}"
		{/if}

		{if $target}
			target="{$target}"
		{/if}
	{/let}

	<a {$attributes}>
		{let $iconAlignment: $icon and $icon.alignment ? $icon.alignment : 'left' /}

		{if $icon and $iconAlignment == 'left'}
			{call .icon }
				{param icon: $icon /}
			{/call}
		{/if}

		{$label}

		{if $icon and $iconAlignment == 'right'}
			{call .icon }
				{param icon: $icon /}
			{/call}
		{/if}
	</a>
{/template}

/**
 * This renders a Clay Icon.
 */
{template .icon}
	{@param? icon: [
		alignment: string,
		spritemap: string,
		symbol: string
	]}

	{call ClayIcon.render}
		{param spritemap: $icon.spritemap /}
		{param symbol: $icon.symbol /}
	{/call}
{/template}
