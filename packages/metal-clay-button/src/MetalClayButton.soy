{namespace MetalClayButton}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param? ariaLabel: string}
	{@param? block: bool}
	{@param? disabled: bool}
	{@param? href: string}
	{@param? icon: ?}
	{@param? label: html}
	{@param? name: string}
	{@param? size: string}
	{@param? style: string}
	{@param? type: string}
	{@param? value: string}


	{if $href}
		<a href="{$href}" {call .attributes data="all" /}>
			{call .content}
				{param icon: $icon /}
				{param label: $label /}
			{/call}
		</a>
	{else}
		<button {call .attributes data="all" /}>
			{call .content}
				{param icon: $icon /}
				{param label: $label /}
			{/call}
		</button>
	{/if}
{/template}

/**
 * Renders element content
 */
{template .content}
	{@param? icon: ?}
	{@param? label: html}

	{let $iconAlignment: $icon and $icon.alignment ? $icon.alignment : 'left' /}

	{if $icon and $iconAlignment == 'left'}
		{call .icon}
			{param icon: $icon /}
		{/call}
	{/if}

	{$label ?: ''}

	{if $icon and $iconAlignment == 'right'}
		{call .icon}
			{param icon: $icon /}
		{/call}
	{/if}
{/template}

/**
 * Renders icon element
 */
{template .icon}
	{@param icon: ?}

	{call MetalClayIcon.render}
		{param elementClasses: $icon.elementClasses /}
		{param spritemap: $icon.spritemap /}
		{param symbol: $icon.symbol /}
	{/call}
{/template}

/**
 * Renders html attributes for button element
 */
{template .attributes kind="attributes"}
	{@param? ariaLabel: string}
	{@param? block: bool}
	{@param? disabled: bool}
	{@param? name: string}
	{@param? size: string}
	{@param? style: string}
	{@param? type: string}
	{@param? value: string}

	{let $classes kind="text"}
		btn
		{if $block}
			{sp}btn-block
		{/if}
		{if $size}
			{sp}btn-{$size}
		{/if}
		{if $style}
			{sp}btn-{$style}
			{else}
			{sp}btn-primary
		{/if}
	{/let}

	class="{$classes}"

	{if $ariaLabel}
		aria-label="{$ariaLabel}"
	{/if}

	{if $disabled}
		disabled
	{/if}

	{if $name}
		name="{$name}"
	{/if}

	{if $value}
		value="{$value}"
	{/if}

	{if $type}
		type="{$type}"
	{/if}
{/template}
