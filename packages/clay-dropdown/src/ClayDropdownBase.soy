{namespace ClayDropdownBase}

/**
 * This renders a dropdown.
 */
{template .render}
	{@param items: list<?>}
	{@param triggerLabel: any}
	{@param? button: ?}
	{@param? caption: string}
	{@param? expanded: bool}
	{@param? helpText: string}
	{@param? indicatorsPosition: string}
	{@param? searchable: bool}
	{@param? spritemap: string}
	{@param? triggerStyle: string}
	{@param? type: string}

	{let $wrapperClasses kind="text"}
		dropdown
		{if $expanded}
			{sp}show
		{/if}
	{/let}

	<div class="{$wrapperClasses}">
		{call .trigger}
			{param expanded: $expanded /}
			{param triggerLabel: $triggerLabel /}
			{param triggerStyle: $triggerStyle /}
		{/call}

		{call .sections}
			{param button: $button /}
			{param caption: $caption /}
			{param expanded: $expanded /}
			{param helpText: $helpText /}
			{param indicatorsPosition: $indicatorsPosition /}
			{param items: $items /}
			{param searchable: $searchable /}
			{param spritemap: $spritemap /}
			{param type: $type ?: 'list' /}
		{/call}
	</div>
{/template}

/**
 * Renders a list of items
 */
{template .items}
	{@param items: list<?>}
	{@param? indicatorsPosition: string}
	{@param? isInList: bool}
	{@param? spritemap: string}

	{foreach $item in $items}
		{delcall ClayDropdown.item variant="$item.type"}
			{param active: $item.active /}
			{param checked: $item.checked /}
			{param disabled: $item.disabled /}
			{param indicatorSymbol: $item.indicatorSymbol /}
			{param indicatorsPosition: $indicatorsPosition /}
			{param inputName: $item.inputName /}
			{param inputValue: $item.inputValue /}
			{param isInList: $isInList /}
			{param items: $item.items /}
			{param label: $item.label ?: '' /}
			{param separator: $item.separator /}
			{param spritemap: $spritemap /}
			{param url: $item.url /}
		{/delcall}
	{/foreach}
{/template}

/**
 * Renders a search input
 */
{template .search}
	{@param spritemap: string}

	<div class="dropdown-section">
		<div class="input-group input-group-inset">
			<div class="input-group-input">
				<input aria-label="Search for..." class="form-control" data-oninput="_handleSearch" placeholder="Search for..." type="text" ref="searchInput">
			</div>
			
			<span class="input-group-inset-item">
				{call ClayButton.render}
					{param icon: [
						'alignment': 'left',
						'monospaced': false,
						'spritemap': $spritemap,
						'symbol': 'search'
					] /}
					{param style: 'link' /}
				{/call}
			</span>
		</div>
	</div>
{/template}

/**
 * Renders the dropdown sections
 */
{template .sections}
	{@param items: list<?>}
	{@param? button: ?}
	{@param? caption: string}
	{@param? expanded: bool}
	{@param? helpText: string}
	{@param? indicatorsPosition: string}
	{@param? searchable: bool}
	{@param? spritemap: string}
	{@param? type: string}

	{let $listAttributes kind="attributes"}
		class="dropdown-menu
			{if $indicatorsPosition == 'left'}
				{sp}dropdown-menu-indicator-start
			{elseif $indicatorsPosition == 'right'}
				{sp}dropdown-menu-indicator-end
			{/if}

			{if $expanded}
				{sp}show
			{/if}
		"
	{/let}

	{let $dropdownMenu kind="html"}
		<div {$listAttributes}>
			{if $helpText}
				<div class="alert alert-fluid alert-info" role="alert">
					{$helpText}
				</div>
			{/if}

			{if $searchable and $spritemap}
				{call .search}
					{param spritemap: $spritemap /}
				{/call}
			{/if}

			{let $itemList kind="html"}
				{call .items}
					{param indicatorsPosition: $indicatorsPosition /}
					{param isInList: $type == 'list' /}
					{param items: $items /}
					{param spritemap: $spritemap /}
				{/call}
			{/let}

			{if $type == 'list'}
				<ul class="list-unstyled">
					{$itemList}
				</ul>
			{else}
					{$itemList}
			{/if}

			{if $caption}
				<div class="dropdown-caption">{$caption}</div>
			{/if}

			{if $button}
				<div class="dropdown-section">
					{call ClayButton.render}
						{param block: true /}
						{param label: $button.label /}
						{param style: $button.style /}
						{param type: $button.type /}
					{/call}
				</div>
			{/if}
		</div>
	{/let}

	{if $type == 'form'}
		<form>
			{$dropdownMenu}
		</form>
	{else}
		{$dropdownMenu}
	{/if}
{/template}

/**
 * Renders the trigger button
 */
{template .trigger}
	{@param triggerLabel: any}
	{@param? expanded: bool}
	{@param? triggerStyle: string}

	{let $buttonAttributes kind="attributes"}
		{if $expanded}
			aria-expanded="true"
		{else}
			aria-expanded="false"
		{/if}

		aria-haspopup="true"
		aria-label="toggle"
		class="dropdown-toggle btn
			{if $triggerStyle}
				{sp}btn-{$triggerStyle}
			{else}
				{sp}btn-unstyled
			{/if}
		"

		data-onclick="toggle"
	{/let}

	<button {$buttonAttributes}>
		{$triggerLabel}
	</button>
{/template}

/**
 * Renders list item
 **/
{deltemplate ClayDropdown.item}
	{@param label: string}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? indicatorsPosition: string}
	{@param? indicatorSymbol: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? isInList: bool}
	{@param? items: list<?>}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? url: string}

	{let $itemContent kind="html"}
		{let $linkAttriubtes kind="attributes"}
			class="dropdown-item
				{if $active}
					{sp}active
				{/if}

				{if $disabled}
					{sp}disabled
				{/if}
			"
			
			{if $disabled}
				href="javascript:;"
			{else}
				href="{$url}"
			{/if}
		{/let}

		<a {$linkAttriubtes}>
			{let $iconContent kind="html"}
				{if $indicatorSymbol and $spritemap}
					<div class="dropdown-item-indicator">
						{call ClayIcon.render}
							{param spritemap: $spritemap /}
							{param symbol: $indicatorSymbol /}
						{/call}
					</div>
				{/if}
			{/let}

			{if $indicatorSymbol and $indicatorsPosition == 'left'}
				{$iconContent}
			{/if}

			{$label}

			{if $indicatorSymbol and $indicatorsPosition == 'right'}
				{$iconContent}
			{/if}
		</a>
	{/let}

	{if $isInList}
		<li>
			{$itemContent}
		</li>
	{else}
		<li>
			{$itemContent}
		</li>
	{/if}
{/deltemplate}

/**
 * Renders list item with checkbox
 **/
{deltemplate ClayDropdown.item variant="'checkbox'"}
	{@param label: string}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? indicatorsPosition: string}
	{@param? indicatorSymbol: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? isInList: bool}
	{@param? items: list<?>}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? url: string}

	{let $checkbox kind="html"}
		{call ClayCheckbox.render}
			{param checked: $checked /}
			{param disabled: $disabled /}
			{param inline: true /}
			{param label: $label /}
			{param name: $inputName /}
			{param value: $inputValue /}
		{/call}
	{/let}

	{let $classes kind="text"}
		dropdown-item
		{if $active or $checked}
			{sp}active
		{/if}
	{/let}

	{if $isInList}
		<li class="{$classes}">
			{$checkbox}
		</li>

		{if $separator}
			<li aria-hidden="true" class="dropdown-divider" role="presentation"></li>
		{/if}
	{else}
		<div class="{$classes}">
			{$checkbox}
		</div>

		{if $separator}
			<div class="dropdown-divider"></div>
		{/if}
	{/if}
{/deltemplate}

/**
 * Renders list group header item
 **/
{deltemplate ClayDropdown.item variant="'group'"}
	{@param label: string}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? indicatorsPosition: string}
	{@param? indicatorSymbol: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? isInList: bool}
	{@param? items: list<?>}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? url: string}

	{if $label != ''}
		{if $isInList}
			<li class="dropdown-subheader">
				{$label}
			</li>
		{else}
			<div class="dropdown-subheader">
				{$label}
			</div>
		{/if}
	{/if}

	{if $items}
		{call .items}
			{param indicatorsPosition: $indicatorsPosition /}
			{param isInList: $isInList /}
			{param items: $items /}
			{param spritemap: $spritemap /}
		{/call}
	{/if}

	{if $separator}
		{if $isInList}
			<li aria-hidden="true" class="dropdown-divider" role="presentation"></li>
		{else}
			<div class="dropdown-divider"></div>
		{/if}
	{/if}
{/deltemplate}

/**
 * Renders list item with radio group
 **/
{deltemplate ClayDropdown.item variant="'radiogroup'"}
	{@param label: string}
	{@param? active: bool}
	{@param? checked: bool}
	{@param? disabled: bool}
	{@param? indicatorsPosition: string}
	{@param? indicatorSymbol: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? isInList: bool}
	{@param? items: list<?>}
	{@param? separator: bool}
	{@param? spritemap: string}
	{@param? url: string}

	{if $label != ''}
		<div class="dropdown-subheader">
			{$label}
		</div>
	{/if}

	<div aria-label="{$label}" role="radiogroup">
		{if $items}
			{foreach $item in $items}
				{let $classes kind="text"}
					dropdown-item
					{if $item.active or $item.checked}
						{sp}active
					{/if}
				{/let}

				<div class="{$classes}">
					{call ClayRadio.render}
						{param checked: $item.checked /}
						{param disabled: $item.disabled /}
						{param inline: true /}
						{param label: $item.label /}
						{param name: $inputName /}
						{param value: $item.inputValue /}
					{/call}
				</div>
			{/foreach}
		{/if}
	</div>

	{if $separator}
			<div class="dropdown-divider"></div>
	{/if}
{/deltemplate}