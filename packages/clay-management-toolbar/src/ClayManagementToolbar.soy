{namespace ClayManagementToolbar}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? actionItems: list<?>}
	{@param? elementClasses: string}
	{@param? filterItems: list<?>}
	{@param? handleFilterDoneButtonClick_: any}
	{@param? handlePlusButtonClicked_: any}
	{@param? handleSelectAllClicked_: any}
	{@param? handleSelectPageCheckboxChanged_: any}
	{@param? handleSortingButtonClicked_: any}
	{@param? id: string}
	{@param? selectable: bool}
	{@param? selectedItems: number}
	{@param? sortingOrder: string}
	{@param? totalItems: number}
	{@param? viewTypes: list<?>}

	{let $isActive: $selectedItems and $selectedItems > 0 /}

	{if $isActive}
		{call .active}
			{param actionItems: $actionItems /}
			{param elementClasses: $elementClasses /}
			{param handleSelectAllClicked_: $handleSelectAllClicked_ /}
			{param handleSelectPageCheckboxChanged_: $handleSelectPageCheckboxChanged_ /}
			{param selectedItems: $selectedItems /}
			{param spritemap: $spritemap /}
			{param totalItems: $totalItems /}
		{/call}
	{else}
		{call .default}
			{param elementClasses: $elementClasses /}
			{param filterItems: $filterItems /}
			{param handleFilterDoneButtonClick_: $handleFilterDoneButtonClick_ /}
			{param handlePlusButtonClicked_: $handlePlusButtonClicked_ /}
			{param handleSelectPageCheckboxChanged_: $handleSelectPageCheckboxChanged_ /}
			{param handleSortingButtonClicked_: $handleSortingButtonClicked_ /}
			{param id: $id /}
			{param selectable: $selectable /}
			{param sortingOrder: $sortingOrder /}
			{param spritemap: $spritemap /}
			{param viewTypes: $viewTypes /}
		{/call}
	{/if}
{/template}

/**
 * This renders the component's active content.
 */
{template .active}
	{@param spritemap: string}
	{@param? actionItems: list<?>}
	{@param? elementClasses: string}
	{@param? handleSelectAllClicked_: any}
	{@param? handleSelectPageCheckboxChanged_: any}
	{@param? id: string}
	{@param? selectedItems: number}
	{@param? totalItems: number}

	{let $navAttributes kind="attributes"}
		class="management-bar management-bar-primary navbar navbar-expand-md
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$navAttributes}>
		<div class="container">
			<ul class="navbar-nav">
				<li class="nav-item">
					{call ClayCheckbox.render}
						{param checked: true /}
						{param events: ['change': $handleSelectPageCheckboxChanged_] /}
						{param hideLabel: true /}
						{param indeterminate: $selectedItems < $totalItems /}
						{param label: 'Select Page' /}
						{param ref: 'selectPageCheckbox' /}
					{/call}
				</li>
				<li class="nav-item">
					<span class="navbar-text">
						{$selectedItems} of {$totalItems}{sp}
						<span class="navbar-breakpoint-down-d-none">items selected</span>
					</span>
				</li>
				<li class="nav-item">
					{call ClayButton.render}
						{param elementClasses: 'nav-btn' /}
						{param events: ['click': $handleSelectAllClicked_] /}
						{param label: 'Select all' /}
						{param ref: 'selectAllButton' /}
						{param style: 'link' /}
					{/call}
				</li>
			</ul>
			
			{if $actionItems}
				<ul class="navbar-nav">
					<li class="nav-item">
						{call ClayActionsDropdown.render}
							{param items: $actionItems /}
							{param spritemap: $spritemap /}
						{/call}
					</li>
				</ul>
			{/if}
		</div>
	</nav>
{/template}

/**
 * This renders the component's active content.
 */
{template .default}
	{@param spritemap: string}
	{@param? elementClasses: string}
	{@param? filterItems: list<?>}
	{@param? handleFilterDoneButtonClick_: any}
	{@param? handlePlusButtonClicked_: any}
	{@param? handleSelectPageCheckboxChanged_: any}
	{@param? handleSortingButtonClicked_: any}
	{@param? id: string}
	{@param? selectable: bool}
	{@param? sortingOrder: string}
	{@param? viewTypes: list<?>}

	{let $navAttributes kind="attributes"}
		class="management-bar management-bar-light navbar navbar-expand-md
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$navAttributes}>
		<div class="container">
			<ul class="navbar-nav">
				{if $selectable}
					<li class="nav-item">
						{call ClayCheckbox.render}
							{param events: ['change': $handleSelectPageCheckboxChanged_] /}
							{param hideLabel: true /}
							{param label: 'Select Page' /}
							{param ref: 'selectPageCheckbox' /}
						{/call}
					</li>
				{/if}

				{if $filterItems}
					<li class="dropdown nav-item">
						{call ClayDropdown.render}
							{param button: [
								'label': 'Done'
							] /}
							{param events: ['buttonClicked': $handleFilterDoneButtonClick_] /}
							{param items: $filterItems /}
							{param label: 'Filter and Order' /}
							{param ref: 'filters' /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link navbar-breakpoint-down-d-none' /}
							{param type: 'form' /}
						{/call}
					</li>
				{/if}

				<li class="nav-item">
					{let $orderClasses kind="text"}
						nav-link nav-link-monospaced
						{if $sortingOrder == 'desc'}
							{sp}order-arrow-down-active
						{else}
							{sp}order-arrow-up-active
						{/if}
					{/let}

					{call ClayButton.render}
						{param elementClasses: $orderClasses /}
						{param events: ['click': $handleSortingButtonClicked_] /}
						{param icon: [
							'alignment': 'left',
							'spritemap': $spritemap,
							'symbol': 'order-arrow'
						] /}
						{param ref: 'sortingButton' /}
						{param style: 'unstyled' /}
					{/call}
				</li>
			</ul>

			<ul class="navbar-nav">
				{if $viewTypes}
					<li class="dropdown nav-item">
						{call ClayDropdown.render}
							{param icon kind="text"}
								{foreach $viewType in $viewTypes}
									{if $viewType.active}
										{$viewType.icon}
									{/if}
								{/foreach}
							{/param}
							{param items: $viewTypes /}
							{param itemsIconAlignment: 'left' /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link nav-link-monospaced' /}
						{/call}
					</li>
				{/if}

				<li class="nav-item">
					{call ClayButton.render}
						{param elementClasses: 'nav-btn nav-btn-monospaced' /}
						{param events: ['click': $handlePlusButtonClicked_ ] /}
						{param icon: [
							'alignment': 'left',
							'spritemap': $spritemap,
							'symbol': 'plus'
						] /}
						{param ref: 'plusButton' /}
					{/call}
				</li>
			</ul>
		</div>
	</nav>
{/template}