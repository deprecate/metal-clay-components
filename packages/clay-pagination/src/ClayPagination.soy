{namespace ClayPagination}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param currentPage: number}
	{@param spritemap: string}
	{@param totalPages: number}
	{@param? elementClasses: string}
	{@param? id: string}

	{let $attributes kind="attributes"}
		class="clay-pagination pagination
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<ul {$attributes}>
		{call .item}
			{param ariaLabel: 'Previous Page' /}
			{param href: $currentPage > 1 ? '#' + ($currentPage - 1) : null /}
			{param icon: 'angle-left' /}
			{param spritemap: $spritemap /}
		{/call}

		{if $totalPages <= 5}
			{for $page in range(1, $totalPages+1)}
				{call .item}
					{param active: $page == $currentPage /}
					{param href: '#' + $page/}
					{param label: '' + $page/}
				{/call}
			{/for}
		{else}
			{let $fromOneToCurrent: $currentPage - 1 /}
			{let $fromCurrentToLast: $totalPages - $currentPage /}

			{call .item}
				{param active: $currentPage == 1 /}
				{param href: '#1' /}
				{param label: '1' /}
			{/call}

			{if $fromOneToCurrent < 4}
				{for $page in range(2, $currentPage)}
					{call .item}
						{param href: '#' + $page/}
						{param label: '' + $page/}
					{/call}
				{/for}
			{else}
				...
			{/if}

			{if $currentPage != 1 and $currentPage != $totalPages}
				{let $currentRangeInit: $fromOneToCurrent >= 4 ? $currentPage - 1 : $currentPage /}
				{let $currentRangeEnd: $fromCurrentToLast > 3 ? $currentPage + 2 : $currentPage + 1 /}

				{for $page in range($currentRangeInit, $currentRangeEnd)}
					{call .item}
						{param active: $page == $currentPage /}
						{param href: '#' + $page /}
						{param label: '' + $page /}
					{/call}
				{/for}
			{/if}

			{if $fromCurrentToLast <= 3}
				{for $page in range($currentPage + 1, $totalPages)}
					{call .item}
						{param href: '#' + $page/}
						{param label: '' + $page/}
					{/call}
				{/for}
			{else}
				...
			{/if}

			{call .item}
				{param active: $currentPage == $totalPages /}
				{param href: '#' + $totalPages /}
				{param label: '' + $totalPages /}
			{/call}
		{/if}

		{call .item}
			{param ariaLabel: 'Next Page' /}
			{param href: $currentPage < $totalPages ? '#' + ($currentPage + 1) : null /}
			{param icon: 'angle-right' /}
			{param spritemap: $spritemap /}
		{/call}
	</ul>
{/template}

/**
 * Renders a page item
 */
{template .item}
	{@param? active: bool}
	{@param? ariaLabel: string}
	{@param? href: string}
	{@param? icon: string}
	{@param? label: string}
	{@param? spritemap: string}

	{let $classes kind="text"}
		page-item
		{if $active}
			{sp}active
		{/if}

		{if not $href}
			{sp}disabled
		{/if}
	{/let}

	<li class="{$classes}">
		{call ClayLink.render}
			{param ariaLabel: $ariaLabel /}
			{param elementClasses: 'page-link' /}
			{param href: $href /}
			{param icon: $icon /}
			{param label: $label /}
			{param spritemap: $spritemap /}
		{/call}
	</li>
{/template}